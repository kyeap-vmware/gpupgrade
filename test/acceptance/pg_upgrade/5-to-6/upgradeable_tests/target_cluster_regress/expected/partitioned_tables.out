-- Copyright (c) 2017-2023 VMware, Inc. or its affiliates
-- SPDX-License-Identifier: Apache-2.0

--------------------------------------------------------------------------------
-- Tests to ensure that various flavors of partitioned tables are functional post-upgrade
--
-- Tests are inspired by:
-- gpdb/src/test/regress/sql/partition.sql
-- gpdb/src/test/regress/sql/partition_indexing.sql
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Helper functions
--------------------------------------------------------------------------------
DROP FUNCTION IF EXISTS dependencies();
DROP
CREATE FUNCTION dependencies() RETURNS TABLE( depname NAME, classtype "char", refname NAME, refclasstype "char", deptype "char" ) LANGUAGE SQL STABLE STRICT AS $fn$ WITH RECURSIVE w AS ( SELECT classid::regclass, objid, objsubid, refclassid::regclass, refobjid, refobjsubid, deptype FROM pg_depend d WHERE classid IN ('pg_constraint'::regclass, 'pg_class'::regclass) AND (objid > 16384 OR refobjid > 16384) 
UNION 
SELECT d2.* FROM w INNER JOIN pg_depend d2 ON (w.refclassid, w.refobjid, w.refobjsubid) = (d2.classid, d2.objid, d2.objsubid) ) SELECT COALESCE(con.conname, c.relname, t.typname, nsp.nspname)     AS depname, COALESCE(con.contype, c.relkind, '-') as classtype, COALESCE(con2.conname, c2.relname, t2.typname, nsp2.nspname) AS refname, COALESCE(con2.contype, c2.relkind, '-') as refclasstype, w.deptype FROM w LEFT JOIN pg_constraint con ON classid = 'pg_constraint'::regclass AND objid = con.oid LEFT JOIN pg_class c ON classid = 'pg_class'::regclass AND objid = c.oid LEFT JOIN pg_type t ON classid = 'pg_type'::regclass AND objid = t.oid LEFT JOIN pg_namespace nsp ON classid = 'pg_namespace'::regclass AND objid = nsp.oid 
LEFT JOIN pg_constraint con2 ON refclassid = 'pg_constraint'::regclass AND refobjid = con2.oid LEFT JOIN pg_class c2 ON refclassid = 'pg_class'::regclass AND refobjid = c2.oid LEFT JOIN pg_type t2 ON refclassid = 'pg_type'::regclass AND refobjid = t2.oid LEFT JOIN pg_namespace nsp2 ON refclassid = 'pg_namespace'::regclass AND refobjid = nsp2.oid $fn$;
CREATE

DROP FUNCTION IF EXISTS index_backed_constraints();
DROP
CREATE FUNCTION index_backed_constraints() RETURNS TABLE(table_name NAME, constraint_name NAME, index_name NAME, constraint_type char) LANGUAGE SQL STABLE STRICT AS $fn$ SELECT c1.relname, con.conname, c2.relname, con.contype::char FROM pg_constraint con JOIN pg_class c1 ON c1.oid = con.conrelid JOIN pg_class c2 ON c2.oid = con.conindid WHERE con.contype != 'c' ORDER BY conrelid $fn$;
CREATE

DROP FUNCTION IF EXISTS root_partition_indexes();
DROP
CREATE FUNCTION root_partition_indexes() RETURNS TABLE(table_name NAME, index_name REGCLASS,indisvalid boolean, column_num smallint, column_name NAME) LANGUAGE SQL STABLE STRICT AS $fn$ WITH indexes AS ( SELECT *, unnest(indkey) AS column_num FROM pg_index ) SELECT DISTINCT c.relname as table_name, indexrelid::regclass as index_name, indisvalid, column_num, a.attname FROM indexes pi JOIN pg_partition pp ON pi.indrelid = pp.parrelid JOIN pg_class c on c.oid=pi.indrelid JOIN pg_class pc ON pc.oid = pp.parrelid JOIN pg_attribute a on a.attrelid = pi.indrelid AND a.attnum = pi.column_num ORDER BY 1, 2, 4 $fn$;
CREATE

DROP FUNCTION IF EXISTS child_partition_indexes();
DROP
CREATE FUNCTION child_partition_indexes() RETURNS TABLE(table_name NAME, index_name REGCLASS, indisvalid boolean, has_child boolean, column_num smallint, column_name NAME) LANGUAGE SQL STABLE STRICT AS $fn$ WITH indexes AS ( SELECT *, unnest(indkey) AS column_num FROM pg_index ) SELECT DISTINCT c.relname as table_name, indexrelid::regclass as index_name, indisvalid, pc.relhassubclass as has_child, column_num, a.attname FROM indexes pi JOIN pg_partition_rule pp ON pi.indrelid=pp.parchildrelid JOIN pg_class c on c.oid=pi.indrelid JOIN pg_class pc ON pc.oid=pp.parchildrelid JOIN pg_attribute a on a.attrelid = pi.indrelid AND a.attnum = pi.column_num ORDER by 1, 2, 4, 5 $fn$;
CREATE

--------------------------------------------------------------------------------
-- Use the indexes whenever possible
--------------------------------------------------------------------------------
SET enable_indexscan = true;
SET
SET enable_bitmapscan = true;
SET
SET enable_seqscan = false;
SET
SET optimizer = off;
SET

--------------------------------------------------------------------------------
-- AO PARTITIONED TABLE WITH MULTIPLE SEGFILES AND DELETED TUPLES
--------------------------------------------------------------------------------

EXPLAIN (COSTS OFF) SELECT * FROM p_ao_table_with_multiple_segfiles WHERE id = 1 ORDER BY 1;
 QUERY PLAN                                                                                             
--------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                               
   ->  Append                                                                                           
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_other_ids_2_prt_jane           
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_other_id_2_prt_jane 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_other_ids_2_prt_john           
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_other_id_2_prt_john 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_other_2_prt_other_names        
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_o_2_prt_other_names 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_2_2_prt_jane                   
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_2_2_prt_jane        
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_2_2_prt_john                   
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_2_2_prt_john        
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_2_2_prt_other_names            
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_2_2_prt_other_names 
                     Index Cond: (id = 1)                                                               
 Optimizer: Postgres query optimizer                                                                    
(27 rows)
SELECT * FROM p_ao_table_with_multiple_segfiles WHERE id = 1 ORDER BY 1;
 id | name 
----+------
 1  | Jane 
 1  | Jane 
(2 rows)

EXPLAIN (COSTS OFF) SELECT * FROM p_ao_table_with_multiple_segfiles WHERE id = 2 AND name = 'Jane' ORDER BY 1;
 QUERY PLAN                                                                                             
--------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                               
   ->  Append                                                                                           
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_other_ids_2_prt_jane           
               Recheck Cond: (id = 2)                                                                   
               Filter: (name = 'Jane'::text)                                                            
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_other_id_2_prt_jane 
                     Index Cond: (id = 2)                                                               
         ->  Bitmap Heap Scan on p_ao_table_with_multiple_segfiles_1_prt_other_2_prt_other_names        
               Recheck Cond: (id = 2)                                                                   
               Filter: (name = 'Jane'::text)                                                            
               ->  Bitmap Index Scan on p_ao_table_with_multiple_segfiles_idx_1_prt_o_2_prt_other_names 
                     Index Cond: (id = 2)                                                               
 Optimizer: Postgres query optimizer                                                                    
(13 rows)
SELECT * FROM p_ao_table_with_multiple_segfiles WHERE id = 2 AND name = 'Jane' ORDER BY 1;
 id | name 
----+------
 2  | Jane 
 2  | Jane 
(2 rows)

--------------------------------------------------------------------------------
-- AOCO PARTITIONED TABLE WITH MULTIPLE SEGFILES AND DELETED TUPLES
--------------------------------------------------------------------------------

EXPLAIN (COSTS OFF) SELECT * FROM p_aoco_table_with_multiple_segfiles WHERE id = 1 ORDER BY 1;
 QUERY PLAN                                                                                             
--------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                               
   ->  Append                                                                                           
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_other_ids_2_prt_jane         
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_other__2_prt_jane 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_other_ids_2_prt_john         
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_other__2_prt_john 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_oth_2_prt_other_names        
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_2_prt_other_names 
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_2_2_prt_jane                 
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_2_2_prt_jane      
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_2_2_prt_john                 
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_2_2_prt_john      
                     Index Cond: (id = 1)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_2_2_prt_other_names          
               Recheck Cond: (id = 1)                                                                   
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_pr_2_prt_other_names1 
                     Index Cond: (id = 1)                                                               
 Optimizer: Postgres query optimizer                                                                    
(27 rows)
SELECT * FROM p_aoco_table_with_multiple_segfiles WHERE id = 1 ORDER BY 1;
 id | name 
----+------
 1  | Jane 
 1  | Jane 
(2 rows)

EXPLAIN (COSTS OFF) SELECT * FROM p_aoco_table_with_multiple_segfiles WHERE id = 2 AND name = 'Jane' ORDER BY 1;
 QUERY PLAN                                                                                             
--------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                               
   ->  Append                                                                                           
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_other_ids_2_prt_jane         
               Recheck Cond: (id = 2)                                                                   
               Filter: (name = 'Jane'::text)                                                            
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_other__2_prt_jane 
                     Index Cond: (id = 2)                                                               
         ->  Bitmap Heap Scan on p_aoco_table_with_multiple_segfiles_1_prt_oth_2_prt_other_names        
               Recheck Cond: (id = 2)                                                                   
               Filter: (name = 'Jane'::text)                                                            
               ->  Bitmap Index Scan on p_aoco_table_with_multiple_segfiles_idx_1_prt_2_prt_other_names 
                     Index Cond: (id = 2)                                                               
 Optimizer: Postgres query optimizer                                                                    
(13 rows)
SELECT * FROM p_aoco_table_with_multiple_segfiles WHERE id = 2 AND name = 'Jane' ORDER BY 1;
 id | name 
----+------
 2  | Jane 
 2  | Jane 
(2 rows)

--------------------------------------------------------------------------------
-- POLYMORPHIC PARTITIONED TABLES
-- Test to ensure that partitioned polymorphic tables can be
-- upgraded. We create the tables with 2 heap, 1 AO, 1 AOCO, and 1
-- external partitions. The root partition of each table will be
-- either heap or AOCO.
--------------------------------------------------------------------------------

-- Show what the storage types of each partition are after upgrade
SELECT relname, relstorage FROM pg_class WHERE relname SIMILAR TO 'poly_(list|range)_partition_with_(heap|aoco)_root%' AND relkind IN ('r') ORDER BY relname;
 relname                                               | relstorage 
-------------------------------------------------------+------------
 poly_list_partition_with_aoco_root                    | c          
 poly_list_partition_with_aoco_root_1_prt_ao_part      | a          
 poly_list_partition_with_aoco_root_1_prt_aoco_part    | c          
 poly_list_partition_with_aoco_root_1_prt_ext_part     | x          
 poly_list_partition_with_aoco_root_1_prt_heap_part_1  | h          
 poly_list_partition_with_aoco_root_1_prt_heap_part_2  | h          
 poly_list_partition_with_heap_root                    | h          
 poly_list_partition_with_heap_root_1_prt_ao_part      | a          
 poly_list_partition_with_heap_root_1_prt_aoco_part    | c          
 poly_list_partition_with_heap_root_1_prt_ext_part     | x          
 poly_list_partition_with_heap_root_1_prt_heap_part_1  | h          
 poly_list_partition_with_heap_root_1_prt_heap_part_2  | h          
 poly_range_partition_with_aoco_root                   | c          
 poly_range_partition_with_aoco_root_1_prt_ao_part     | a          
 poly_range_partition_with_aoco_root_1_prt_aoco_part   | c          
 poly_range_partition_with_aoco_root_1_prt_ext_part    | x          
 poly_range_partition_with_aoco_root_1_prt_heap_part_1 | h          
 poly_range_partition_with_aoco_root_1_prt_heap_part_2 | h          
 poly_range_partition_with_heap_root                   | h          
 poly_range_partition_with_heap_root_1_prt_ao_part     | a          
 poly_range_partition_with_heap_root_1_prt_aoco_part   | c          
 poly_range_partition_with_heap_root_1_prt_ext_part    | x          
 poly_range_partition_with_heap_root_1_prt_heap_part_1 | h          
 poly_range_partition_with_heap_root_1_prt_heap_part_2 | h          
(24 rows)


--------------------------------------------------------------------------------
-- poly_range_partition_with_heap_root
--------------------------------------------------------------------------------
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_heap_root ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_ao_part                                            
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_aoco_part                                          
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_heap_part_1                                        
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_heap_part_2                                        
               ->  External Scan on poly_range_partition_with_heap_root_1_prt_ext_part                                      
 Optimizer: Postgres query optimizer                                                                                        
(11 rows)
SELECT * FROM poly_range_partition_with_heap_root ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
 5 | 1 
 5 | 5 
 6 | 6 
 7 | 7 
 8 | 8 
 9 | 9 
(11 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                              
   Merge Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                            
         Sort Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                    
               ->  Bitmap Heap Scan on poly_range_partition_with_heap_root_1_prt_ao_part                                                               
                     Recheck Cond: (a < 5)                                                                                                             
                     ->  Bitmap Index Scan on poly_range_partition_with_heap_root_idx_1_prt_ao_part                                                    
                           Index Cond: (a < 5)                                                                                                         
               ->  Bitmap Heap Scan on poly_range_partition_with_heap_root_1_prt_aoco_part                                                             
                     Recheck Cond: (a < 5)                                                                                                             
                     ->  Bitmap Index Scan on poly_range_partition_with_heap_root_idx_1_prt_aoco_part                                                  
                           Index Cond: (a < 5)                                                                                                         
               ->  Index Scan using poly_range_partition_with_heap_root_idx_1_prt_heap_part_1 on poly_range_partition_with_heap_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                               
               ->  Index Scan using poly_range_partition_with_heap_root_idx_1_prt_heap_part_2 on poly_range_partition_with_heap_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                               
               ->  External Scan on poly_range_partition_with_heap_root_1_prt_ext_part                                                                 
                     Filter: (a < 5)                                                                                                                   
 Optimizer: Postgres query optimizer                                                                                                                   
(20 rows)
SELECT * FROM poly_range_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
(5 rows)

DELETE FROM poly_range_partition_with_heap_root WHERE b%2 = 0 AND b > 1;
DELETE 4
UPDATE poly_range_partition_with_heap_root SET b = b - 1 WHERE b > 1;
UPDATE 4
INSERT INTO poly_range_partition_with_heap_root SELECT 100 + i, i FROM generate_series(2, 9)i;
INSERT 8

EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_heap_root ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_ao_part                                            
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_aoco_part                                          
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_heap_part_1                                        
               ->  Seq Scan on poly_range_partition_with_heap_root_1_prt_heap_part_2                                        
               ->  External Scan on poly_range_partition_with_heap_root_1_prt_ext_part                                      
 Optimizer: Postgres query optimizer                                                                                        
(11 rows)
SELECT * FROM poly_range_partition_with_heap_root ORDER BY 1,2;
 a   | b 
-----+---
 1   | 1 
 3   | 1 
 3   | 2 
 5   | 1 
 5   | 4 
 7   | 6 
 9   | 8 
 102 | 2 
 103 | 3 
 104 | 4 
 105 | 5 
 106 | 6 
 107 | 7 
 108 | 8 
 109 | 9 
(15 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                              
   Merge Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                            
         Sort Key: poly_range_partition_with_heap_root_1_prt_ao_part.a, poly_range_partition_with_heap_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                    
               ->  Bitmap Heap Scan on poly_range_partition_with_heap_root_1_prt_ao_part                                                               
                     Recheck Cond: (a < 5)                                                                                                             
                     ->  Bitmap Index Scan on poly_range_partition_with_heap_root_idx_1_prt_ao_part                                                    
                           Index Cond: (a < 5)                                                                                                         
               ->  Bitmap Heap Scan on poly_range_partition_with_heap_root_1_prt_aoco_part                                                             
                     Recheck Cond: (a < 5)                                                                                                             
                     ->  Bitmap Index Scan on poly_range_partition_with_heap_root_idx_1_prt_aoco_part                                                  
                           Index Cond: (a < 5)                                                                                                         
               ->  Index Scan using poly_range_partition_with_heap_root_idx_1_prt_heap_part_1 on poly_range_partition_with_heap_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                               
               ->  Index Scan using poly_range_partition_with_heap_root_idx_1_prt_heap_part_2 on poly_range_partition_with_heap_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                               
               ->  External Scan on poly_range_partition_with_heap_root_1_prt_ext_part                                                                 
                     Filter: (a < 5)                                                                                                                   
 Optimizer: Postgres query optimizer                                                                                                                   
(20 rows)
SELECT * FROM poly_range_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 3 | 1 
 3 | 2 
(3 rows)


--------------------------------------------------------------------------------
-- poly_range_partition_with_aoco_root
--------------------------------------------------------------------------------
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_aoco_root ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_ao_part                                            
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_aoco_part                                          
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_1                                        
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_2                                        
               ->  External Scan on poly_range_partition_with_aoco_root_1_prt_ext_part                                      
 Optimizer: Postgres query optimizer                                                                                        
(11 rows)
SELECT * FROM poly_range_partition_with_aoco_root ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
 5 | 1 
 5 | 5 
 6 | 6 
 7 | 7 
 8 | 8 
 9 | 9 
(11 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_aoco_root WHERE a < 5 OR a > 105 ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_ao_part                                    
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_ao_part                   
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_ao_part                   
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_aoco_part                                  
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_aoco_part                 
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_aoco_part                 
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_1                                
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_1               
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_1               
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_2                                
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_2               
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_2               
                                 Index Cond: (a > 105)                                                                      
               ->  External Scan on poly_range_partition_with_aoco_root_1_prt_ext_part                                      
                     Filter: ((a < 5) OR (a > 105))                                                                         
 Optimizer: Postgres query optimizer                                                                                        
(36 rows)
SELECT * FROM poly_range_partition_with_aoco_root WHERE a < 5 OR a > 105 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
(5 rows)

DELETE FROM poly_range_partition_with_aoco_root WHERE b%2 = 0 AND b > 1;
DELETE 4
UPDATE poly_range_partition_with_aoco_root SET b = b - 1 WHERE b > 1;
UPDATE 4
INSERT INTO poly_range_partition_with_aoco_root SELECT 100 + i, i FROM generate_series(2, 9)i;
INSERT 8

EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_aoco_root ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_ao_part                                            
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_aoco_part                                          
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_1                                        
               ->  Seq Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_2                                        
               ->  External Scan on poly_range_partition_with_aoco_root_1_prt_ext_part                                      
 Optimizer: Postgres query optimizer                                                                                        
(11 rows)
SELECT * FROM poly_range_partition_with_aoco_root ORDER BY 1,2;
 a   | b 
-----+---
 1   | 1 
 3   | 1 
 3   | 2 
 5   | 1 
 5   | 4 
 7   | 6 
 9   | 8 
 102 | 2 
 103 | 3 
 104 | 4 
 105 | 5 
 106 | 6 
 107 | 7 
 108 | 8 
 109 | 9 
(15 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_range_partition_with_aoco_root WHERE a < 5 OR a > 105 ORDER BY 1,2;
 QUERY PLAN                                                                                                                 
----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                   
   Merge Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                                 
         Sort Key: poly_range_partition_with_aoco_root_1_prt_ao_part.a, poly_range_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                         
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_ao_part                                    
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_ao_part                   
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_ao_part                   
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_aoco_part                                  
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_aoco_part                 
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_aoco_part                 
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_1                                
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_1               
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_1               
                                 Index Cond: (a > 105)                                                                      
               ->  Bitmap Heap Scan on poly_range_partition_with_aoco_root_1_prt_heap_part_2                                
                     Recheck Cond: ((a < 5) OR (a > 105))                                                                   
                     ->  BitmapOr                                                                                           
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_2               
                                 Index Cond: (a < 5)                                                                        
                           ->  Bitmap Index Scan on poly_range_partition_with_aoco_root_idx_1_prt_heap_part_2               
                                 Index Cond: (a > 105)                                                                      
               ->  External Scan on poly_range_partition_with_aoco_root_1_prt_ext_part                                      
                     Filter: ((a < 5) OR (a > 105))                                                                         
 Optimizer: Postgres query optimizer                                                                                        
(36 rows)
SELECT * FROM poly_range_partition_with_aoco_root WHERE a < 5 OR a > 105 ORDER BY 1,2;
 a   | b 
-----+---
 1   | 1 
 3   | 1 
 3   | 2 
 106 | 6 
 107 | 7 
 108 | 8 
 109 | 9 
(7 rows)

--------------------------------------------------------------------------------
-- poly_list_partition_with_heap_root
--------------------------------------------------------------------------------
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_heap_root ORDER BY 1,2;
 QUERY PLAN                                                                                                               
--------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                 
   Merge Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b      
   ->  Sort                                                                                                               
         Sort Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b 
         ->  Append                                                                                                       
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_ao_part                                           
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_aoco_part                                         
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_heap_part_1                                       
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_heap_part_2                                       
               ->  External Scan on poly_list_partition_with_heap_root_1_prt_ext_part                                     
 Optimizer: Postgres query optimizer                                                                                      
(11 rows)
SELECT * FROM poly_list_partition_with_heap_root ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
 5 | 1 
 5 | 5 
 6 | 6 
 7 | 7 
 8 | 8 
 9 | 9 
(11 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                            
   Merge Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                          
         Sort Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                  
               ->  Bitmap Heap Scan on poly_list_partition_with_heap_root_1_prt_ao_part                                                              
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_heap_root_idx_1_prt_ao_part                                                   
                           Index Cond: (a < 5)                                                                                                       
               ->  Bitmap Heap Scan on poly_list_partition_with_heap_root_1_prt_aoco_part                                                            
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_heap_root_idx_1_prt_aoco_part                                                 
                           Index Cond: (a < 5)                                                                                                       
               ->  Index Scan using poly_list_partition_with_heap_root_idx_1_prt_heap_part_1 on poly_list_partition_with_heap_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                             
               ->  Index Scan using poly_list_partition_with_heap_root_idx_1_prt_heap_part_2 on poly_list_partition_with_heap_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                             
               ->  External Scan on poly_list_partition_with_heap_root_1_prt_ext_part                                                                
                     Filter: (a < 5)                                                                                                                 
 Optimizer: Postgres query optimizer                                                                                                                 
(20 rows)
SELECT * FROM poly_list_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
(5 rows)

DELETE FROM poly_list_partition_with_heap_root WHERE b%2 = 0 AND b > 1;
DELETE 4
UPDATE poly_list_partition_with_heap_root SET b = b - 1 WHERE b > 1;
UPDATE 4
INSERT INTO poly_list_partition_with_heap_root SELECT 100 + i, i FROM generate_series(2, 9)i;
INSERT 8

EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_heap_root ORDER BY 1,2;
 QUERY PLAN                                                                                                               
--------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                 
   Merge Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b      
   ->  Sort                                                                                                               
         Sort Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b 
         ->  Append                                                                                                       
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_ao_part                                           
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_aoco_part                                         
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_heap_part_1                                       
               ->  Seq Scan on poly_list_partition_with_heap_root_1_prt_heap_part_2                                       
               ->  External Scan on poly_list_partition_with_heap_root_1_prt_ext_part                                     
 Optimizer: Postgres query optimizer                                                                                      
(11 rows)
SELECT * FROM poly_list_partition_with_heap_root ORDER BY 1,2;
 a   | b 
-----+---
 1   | 1 
 3   | 1 
 3   | 2 
 5   | 1 
 5   | 4 
 7   | 6 
 9   | 8 
 102 | 2 
 103 | 3 
 104 | 4 
 105 | 5 
 106 | 6 
 107 | 7 
 108 | 8 
 109 | 9 
(15 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                            
   Merge Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                          
         Sort Key: poly_list_partition_with_heap_root_1_prt_ao_part.a, poly_list_partition_with_heap_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                  
               ->  Bitmap Heap Scan on poly_list_partition_with_heap_root_1_prt_ao_part                                                              
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_heap_root_idx_1_prt_ao_part                                                   
                           Index Cond: (a < 5)                                                                                                       
               ->  Bitmap Heap Scan on poly_list_partition_with_heap_root_1_prt_aoco_part                                                            
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_heap_root_idx_1_prt_aoco_part                                                 
                           Index Cond: (a < 5)                                                                                                       
               ->  Index Scan using poly_list_partition_with_heap_root_idx_1_prt_heap_part_1 on poly_list_partition_with_heap_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                             
               ->  Index Scan using poly_list_partition_with_heap_root_idx_1_prt_heap_part_2 on poly_list_partition_with_heap_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                             
               ->  External Scan on poly_list_partition_with_heap_root_1_prt_ext_part                                                                
                     Filter: (a < 5)                                                                                                                 
 Optimizer: Postgres query optimizer                                                                                                                 
(20 rows)
SELECT * FROM poly_list_partition_with_heap_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 3 | 1 
 3 | 2 
(3 rows)

--------------------------------------------------------------------------------
-- poly_list_partition_with_aoco_root
--------------------------------------------------------------------------------
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_aoco_root ORDER BY 1,2;
 QUERY PLAN                                                                                                               
--------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                 
   Merge Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                               
         Sort Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                       
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_ao_part                                           
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_aoco_part                                         
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_heap_part_1                                       
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_heap_part_2                                       
               ->  External Scan on poly_list_partition_with_aoco_root_1_prt_ext_part                                     
 Optimizer: Postgres query optimizer                                                                                      
(11 rows)
SELECT * FROM poly_list_partition_with_aoco_root ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
 5 | 1 
 5 | 5 
 6 | 6 
 7 | 7 
 8 | 8 
 9 | 9 
(11 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_aoco_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                            
   Merge Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                          
         Sort Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                  
               ->  Bitmap Heap Scan on poly_list_partition_with_aoco_root_1_prt_ao_part                                                              
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_aoco_root_idx_1_prt_ao_part                                                   
                           Index Cond: (a < 5)                                                                                                       
               ->  Bitmap Heap Scan on poly_list_partition_with_aoco_root_1_prt_aoco_part                                                            
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_aoco_root_idx_1_prt_aoco_part                                                 
                           Index Cond: (a < 5)                                                                                                       
               ->  Index Scan using poly_list_partition_with_aoco_root_idx_1_prt_heap_part_1 on poly_list_partition_with_aoco_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                             
               ->  Index Scan using poly_list_partition_with_aoco_root_idx_1_prt_heap_part_2 on poly_list_partition_with_aoco_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                             
               ->  External Scan on poly_list_partition_with_aoco_root_1_prt_ext_part                                                                
                     Filter: (a < 5)                                                                                                                 
 Optimizer: Postgres query optimizer                                                                                                                 
(20 rows)
SELECT * FROM poly_list_partition_with_aoco_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 2 | 2 
 3 | 1 
 3 | 3 
 4 | 4 
(5 rows)

DELETE FROM poly_list_partition_with_aoco_root WHERE b%2 = 0 AND b > 1;
DELETE 4
UPDATE poly_list_partition_with_aoco_root SET b = b - 1 WHERE b > 1;
UPDATE 4
INSERT INTO poly_list_partition_with_aoco_root SELECT 100 + i, i FROM generate_series(2, 9)i;
INSERT 8

EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_aoco_root ORDER BY 1,2;
 QUERY PLAN                                                                                                               
--------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                 
   Merge Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b      
   ->  Sort                                                                                                               
         Sort Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b 
         ->  Append                                                                                                       
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_ao_part                                           
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_aoco_part                                         
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_heap_part_1                                       
               ->  Seq Scan on poly_list_partition_with_aoco_root_1_prt_heap_part_2                                       
               ->  External Scan on poly_list_partition_with_aoco_root_1_prt_ext_part                                     
 Optimizer: Postgres query optimizer                                                                                      
(11 rows)
SELECT * FROM poly_list_partition_with_aoco_root ORDER BY 1,2;
 a   | b 
-----+---
 1   | 1 
 3   | 1 
 3   | 2 
 5   | 1 
 5   | 4 
 7   | 6 
 9   | 8 
 102 | 2 
 103 | 3 
 104 | 4 
 105 | 5 
 106 | 6 
 107 | 7 
 108 | 8 
 109 | 9 
(15 rows)
EXPLAIN (COSTS OFF) SELECT * FROM poly_list_partition_with_aoco_root WHERE a < 5 ORDER BY 1,2;
 QUERY PLAN                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                            
   Merge Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b                                 
   ->  Sort                                                                                                                                          
         Sort Key: poly_list_partition_with_aoco_root_1_prt_ao_part.a, poly_list_partition_with_aoco_root_1_prt_ao_part.b                            
         ->  Append                                                                                                                                  
               ->  Bitmap Heap Scan on poly_list_partition_with_aoco_root_1_prt_ao_part                                                              
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_aoco_root_idx_1_prt_ao_part                                                   
                           Index Cond: (a < 5)                                                                                                       
               ->  Bitmap Heap Scan on poly_list_partition_with_aoco_root_1_prt_aoco_part                                                            
                     Recheck Cond: (a < 5)                                                                                                           
                     ->  Bitmap Index Scan on poly_list_partition_with_aoco_root_idx_1_prt_aoco_part                                                 
                           Index Cond: (a < 5)                                                                                                       
               ->  Index Scan using poly_list_partition_with_aoco_root_idx_1_prt_heap_part_1 on poly_list_partition_with_aoco_root_1_prt_heap_part_1 
                     Index Cond: (a < 5)                                                                                                             
               ->  Index Scan using poly_list_partition_with_aoco_root_idx_1_prt_heap_part_2 on poly_list_partition_with_aoco_root_1_prt_heap_part_2 
                     Index Cond: (a < 5)                                                                                                             
               ->  External Scan on poly_list_partition_with_aoco_root_1_prt_ext_part                                                                
                     Filter: (a < 5)                                                                                                                 
 Optimizer: Postgres query optimizer                                                                                                                 
(20 rows)
SELECT * FROM poly_list_partition_with_aoco_root WHERE a < 5 ORDER BY 1,2;
 a | b 
---+---
 1 | 1 
 3 | 1 
 3 | 2 
(3 rows)

--------------------------------------------------------------------------------
-- MISMATCHED AO PARTITIONED TABLE INDEXES
-- Test upgrade of an AO partition hierarchy having an index defined on the parent, that is
-- not defined on all of the members of the hierarchy.
--------------------------------------------------------------------------------

SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'mismatched_aopartition_indexes%';
 table_name                     | index_name   | indisvalid | column_num | column_name 
--------------------------------+--------------+------------+------------+-------------
 mismatched_aopartition_indexes | mismatch_idx | t          | 2          | b           
(1 row)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'mismatched_aopartition_indexes%';
 table_name                             | index_name           | indisvalid | has_child | column_num | column_name 
----------------------------------------+----------------------+------------+-----------+------------+-------------
 mismatched_aopartition_indexes_1_prt_2 | mismatch_idx_1_prt_2 | t          | f         | 2          | b           
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM mismatched_aopartition_indexes ORDER BY 1;
 QUERY PLAN                                                           
----------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                             
   Merge Key: mismatched_aopartition_indexes_1_prt_2.a                
   ->  Sort                                                           
         Sort Key: mismatched_aopartition_indexes_1_prt_2.a           
         ->  Append                                                   
               ->  Seq Scan on mismatched_aopartition_indexes_1_prt_2 
               ->  Seq Scan on mismatched_aopartition_indexes_1_prt_1 
 Optimizer: Postgres query optimizer                                  
(8 rows)
SELECT * FROM mismatched_aopartition_indexes ORDER BY 1;
 a | b     | c 
---+-------+---
 1 | apple | 1 
 2 | boss  | 2 
(2 rows)
EXPLAIN (COSTS OFF) SELECT * FROM mismatched_aopartition_indexes WHERE b = 'apple' ORDER BY 1;
 QUERY PLAN                                                                   
------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                     
   Merge Key: mismatched_aopartition_indexes_1_prt_2.a                        
   ->  Sort                                                                   
         Sort Key: mismatched_aopartition_indexes_1_prt_2.a                   
         ->  Append                                                           
               ->  Bitmap Heap Scan on mismatched_aopartition_indexes_1_prt_2 
                     Recheck Cond: (b = 'apple'::text)                        
                     ->  Bitmap Index Scan on mismatch_idx_1_prt_2            
                           Index Cond: (b = 'apple'::text)                    
               ->  Seq Scan on mismatched_aopartition_indexes_1_prt_1         
                     Filter: (b = 'apple'::text)                              
 Optimizer: Postgres query optimizer                                          
(12 rows)
SELECT * FROM mismatched_aopartition_indexes WHERE b = 'apple' ORDER BY 1;
 a | b     | c 
---+-------+---
 1 | apple | 1 
(1 row)

--------------------------------------------------------------------------------
-- PARTITIONED TABLES USING KEYWORDS
-- Ensure that partition names having keywords (reserved, non-reserved and
-- unclassified) can be upgraded by quoting them using the quote_all_identifiers
-- GUC.
--------------------------------------------------------------------------------

EXPLAIN (COSTS OFF) SELECT * FROM t_quote_test WHERE a < 5 ORDER BY 1;
 QUERY PLAN                                                                                                                          
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                            
   Merge Key: t_quote_test_1_prt_dp_2_prt_current_3_prt_allocate.a                                                                   
   ->  Sort                                                                                                                          
         Sort Key: t_quote_test_1_prt_dp_2_prt_current_3_prt_allocate.a                                                              
         ->  Append                                                                                                                  
               ->  Index Scan using both_1_prt_dp_2_prt_current_3_prt_allocate on t_quote_test_1_prt_dp_2_prt_current_3_prt_allocate 
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_dp_2_prt_current_3_prt_window on t_quote_test_1_prt_dp_2_prt_current_3_prt_window     
                     Index Cond: (a < 5)                                                                                             
               ->  Bitmap Heap Scan on t_quote_test_1_prt_dp_2_prt_current_3_prt_dsp                                                 
                     Recheck Cond: (a < 5)                                                                                           
                     ->  Bitmap Index Scan on both_1_prt_dp_2_prt_current_3_prt_dsp                                                  
                           Index Cond: (a < 5)                                                                                       
               ->  Index Scan using both_1_prt_dp_2_prt_2_3_prt_allocate on t_quote_test_1_prt_dp_2_prt_2_3_prt_allocate             
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_dp_2_prt_2_3_prt_window on t_quote_test_1_prt_dp_2_prt_2_3_prt_window                 
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_dp_2_prt_2_3_prt_dsp on t_quote_test_1_prt_dp_2_prt_2_3_prt_dsp                       
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_current_3_prt_allocate on t_quote_test_1_prt_2_2_prt_current_3_prt_allocate   
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_current_3_prt_window on t_quote_test_1_prt_2_2_prt_current_3_prt_window       
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_current_3_prt_dsp on t_quote_test_1_prt_2_2_prt_current_3_prt_dsp             
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_2_3_prt_allocate on t_quote_test_1_prt_2_2_prt_2_3_prt_allocate               
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_2_3_prt_window on t_quote_test_1_prt_2_2_prt_2_3_prt_window                   
                     Index Cond: (a < 5)                                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_2_3_prt_dsp on t_quote_test_1_prt_2_2_prt_2_3_prt_dsp                         
                     Index Cond: (a < 5)                                                                                             
 Optimizer: Postgres query optimizer                                                                                                 
(32 rows)
SELECT * FROM t_quote_test WHERE a < 5 ORDER BY 1;
 a | b | c | d | e    
---+---+---+---+------
 1 | 1 | 1 | 1 | val1 
 2 | 2 | 2 | 2 | val2 
 3 | 3 | 3 | 3 | val3 
 4 | 4 | 4 | 4 | val4 
(4 rows)

EXPLAIN (COSTS OFF) SELECT * FROM t_quote_test WHERE e = 'val10' ORDER BY 1;
 QUERY PLAN                                                                                                                  
-----------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                    
   Merge Key: t_quote_test_1_prt_dp_2_prt_current_3_prt_dsp.a                                                                
   ->  Sort                                                                                                                  
         Sort Key: t_quote_test_1_prt_dp_2_prt_current_3_prt_dsp.a                                                           
         ->  Append                                                                                                          
               ->  Index Scan using column_1_prt_dp_2_prt_current_3_prt_dsp on t_quote_test_1_prt_dp_2_prt_current_3_prt_dsp 
                     Index Cond: (e = 'val10'::text)                                                                         
               ->  Index Scan using both_1_prt_dp_2_prt_2_3_prt_dsp on t_quote_test_1_prt_dp_2_prt_2_3_prt_dsp               
                     Filter: (e = 'val10'::text)                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_current_3_prt_dsp on t_quote_test_1_prt_2_2_prt_current_3_prt_dsp     
                     Filter: (e = 'val10'::text)                                                                             
               ->  Index Scan using both_1_prt_2_2_prt_2_3_prt_dsp on t_quote_test_1_prt_2_2_prt_2_3_prt_dsp                 
                     Filter: (e = 'val10'::text)                                                                             
 Optimizer: Postgres query optimizer                                                                                         
(14 rows)
SELECT * FROM t_quote_test WHERE e = 'val10' ORDER BY 1;
 a  | b  | c  | d  | e     
----+----+----+----+-------
 10 | 10 | 10 | 10 | val10 
(1 row)

--------------------------------------------------------------------------------
-- PARTITION CHILDREN IN DIFFERENT SCHEMAS
--------------------------------------------------------------------------------

-- check data integrity after upgrade
SELECT * FROM public.different_schema_ptable ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
 2 | 3 
 3 | 4 
(3 rows)
SELECT * FROM schema1.different_schema_ptable_1_prt_1 ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
(1 row)
SELECT * FROM schema2.different_schema_ptable_1_prt_2 ORDER BY 1, 2;
 a | b 
---+---
 2 | 3 
(1 row)
SELECT * FROM public.different_schema_ptable_1_prt_3 ORDER BY 1, 2;
 a | b 
---+---
 3 | 4 
(1 row)

-- check partition schemas
SELECT nsp.nspname, c.relname FROM pg_class c JOIN pg_namespace nsp ON nsp.oid = c.relnamespace WHERE relname LIKE 'different_schema_ptable%' ORDER BY relname;
 nspname | relname                             
---------+-------------------------------------
 public  | different_schema_ptable             
 schema1 | different_schema_ptable_1_prt_1     
 schema2 | different_schema_ptable_1_prt_2     
 public  | different_schema_ptable_1_prt_3     
 public  | different_schema_ptable_idx         
 schema1 | different_schema_ptable_idx_1_prt_1 
 schema2 | different_schema_ptable_idx_1_prt_2 
 public  | different_schema_ptable_idx_1_prt_3 
(8 rows)

-- test table insert
INSERT INTO public.different_schema_ptable SELECT i, i + 2 FROM generate_series(1, 3) i;
INSERT 3

-- check data after insert
SELECT * FROM public.different_schema_ptable ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
 1 | 3 
 2 | 3 
 2 | 4 
 3 | 4 
 3 | 5 
(6 rows)
SELECT * FROM schema1.different_schema_ptable_1_prt_1 ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
 1 | 3 
(2 rows)
SELECT * FROM schema2.different_schema_ptable_1_prt_2 ORDER BY 1, 2;
 a | b 
---+---
 2 | 3 
 2 | 4 
(2 rows)
SELECT * FROM public.different_schema_ptable_1_prt_3 ORDER BY 1, 2;
 a | b 
---+---
 3 | 4 
 3 | 5 
(2 rows)

--- validate the indexes
EXPLAIN (COSTS OFF) SELECT * FROM public.different_schema_ptable WHERE b < 3 ORDER BY 1, 2;
 QUERY PLAN                                                                                                
-----------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                  
   Merge Key: different_schema_ptable_1_prt_1.a, different_schema_ptable_1_prt_1.b                         
   ->  Sort                                                                                                
         Sort Key: different_schema_ptable_1_prt_1.a, different_schema_ptable_1_prt_1.b                    
         ->  Append                                                                                        
               ->  Index Scan using different_schema_ptable_idx_1_prt_1 on different_schema_ptable_1_prt_1 
                     Index Cond: (b < 3)                                                                   
               ->  Index Scan using different_schema_ptable_idx_1_prt_2 on different_schema_ptable_1_prt_2 
                     Index Cond: (b < 3)                                                                   
               ->  Index Scan using different_schema_ptable_idx_1_prt_3 on different_schema_ptable_1_prt_3 
                     Index Cond: (b < 3)                                                                   
 Optimizer: Postgres query optimizer                                                                       
(12 rows)
SELECT * FROM public.different_schema_ptable WHERE b < 3 ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
(1 row)
EXPLAIN (COSTS OFF) SELECT * FROM schema1.different_schema_ptable_1_prt_1 WHERE b = 2 ORDER BY 1, 2;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: a                                                                                      
   ->  Sort                                                                                          
         Sort Key: a                                                                                 
         ->  Index Scan using different_schema_ptable_idx_1_prt_1 on different_schema_ptable_1_prt_1 
               Index Cond: (b = 2)                                                                   
 Optimizer: Postgres query optimizer                                                                 
(7 rows)
SELECT * FROM schema1.different_schema_ptable_1_prt_1 WHERE b = 2 ORDER BY 1, 2;
 a | b 
---+---
 1 | 2 
(1 row)
EXPLAIN (COSTS OFF) SELECT * FROM schema2.different_schema_ptable_1_prt_2 WHERE b = 4 ORDER BY 1, 2;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: a                                                                                      
   ->  Sort                                                                                          
         Sort Key: a                                                                                 
         ->  Index Scan using different_schema_ptable_idx_1_prt_2 on different_schema_ptable_1_prt_2 
               Index Cond: (b = 4)                                                                   
 Optimizer: Postgres query optimizer                                                                 
(7 rows)
SELECT * FROM schema2.different_schema_ptable_1_prt_2 WHERE b = 4 ORDER BY 1, 2;
 a | b 
---+---
 2 | 4 
(1 row)
EXPLAIN (COSTS OFF) SELECT * FROM public.different_schema_ptable_1_prt_3 WHERE b = 5 ORDER BY 1, 2;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: a                                                                                      
   ->  Sort                                                                                          
         Sort Key: a                                                                                 
         ->  Index Scan using different_schema_ptable_idx_1_prt_3 on different_schema_ptable_1_prt_3 
               Index Cond: (b = 5)                                                                   
 Optimizer: Postgres query optimizer                                                                 
(7 rows)
SELECT * FROM public.different_schema_ptable_1_prt_3 WHERE b = 5 ORDER BY 1, 2;
 a | b 
---+---
 3 | 5 
(1 row)

--------------------------------------------------------------------------------
-- MULTILEVEL PARTITION CHILDREN IN DIFFERENT SCHEMAS
--------------------------------------------------------------------------------

-- check data integrity after upgrade
SELECT * FROM public.multilevel_different_schema_ptable ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
 2  | 02-15-2002 | M      
 3  | 03-15-2003 | M      
 4  | 01-15-2001 | F      
 5  | 02-15-2002 | F      
 6  | 03-15-2003 | F      
(6 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_boys ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
 2  | 02-15-2002 | M      
 3  | 03-15-2003 | M      
(3 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_1 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
(1 row)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_2 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 2  | 02-15-2002 | M      
(1 row)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_3 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 3  | 03-15-2003 | M      
(1 row)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 4  | 01-15-2001 | F      
 5  | 02-15-2002 | F      
 6  | 03-15-2003 | F      
(3 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_girls_2_prt_1 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 4  | 01-15-2001 | F      
(1 row)
SELECT * FROM schema2.multilevel_different_schema_ptable_1_prt_girls_2_prt_2 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 5  | 02-15-2002 | F      
(1 row)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls_2_prt_3 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 6  | 03-15-2003 | F      
(1 row)

-- check partition schemas
SELECT nsp.nspname, c.relname FROM pg_class c JOIN pg_namespace nsp ON nsp.oid = c.relnamespace WHERE relname LIKE 'multilevel_different_schema_ptable%' ORDER BY relname;
 nspname | relname                                                    
---------+------------------------------------------------------------
 public  | multilevel_different_schema_ptable                         
 schema1 | multilevel_different_schema_ptable_1_prt_boys              
 public  | multilevel_different_schema_ptable_1_prt_boys_2_prt_1      
 public  | multilevel_different_schema_ptable_1_prt_boys_2_prt_2      
 public  | multilevel_different_schema_ptable_1_prt_boys_2_prt_3      
 public  | multilevel_different_schema_ptable_1_prt_girls             
 schema1 | multilevel_different_schema_ptable_1_prt_girls_2_prt_1     
 schema2 | multilevel_different_schema_ptable_1_prt_girls_2_prt_2     
 public  | multilevel_different_schema_ptable_1_prt_girls_2_prt_3     
 public  | multilevel_different_schema_ptable_idx                     
 schema1 | multilevel_different_schema_ptable_idx_1_prt_boys          
 public  | multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_1  
 public  | multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_2  
 public  | multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_3  
 public  | multilevel_different_schema_ptable_idx_1_prt_girls         
 schema1 | multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_1 
 schema2 | multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_2 
 public  | multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_3 
(18 rows)

-- test table insert
INSERT INTO public.multilevel_different_schema_ptable VALUES (7, date '2001-01-15', 'M');
INSERT 1
INSERT INTO public.multilevel_different_schema_ptable VALUES (8, date '2002-02-15', 'M');
INSERT 1
INSERT INTO public.multilevel_different_schema_ptable VALUES (9, date '2003-03-15', 'M');
INSERT 1
INSERT INTO public.multilevel_different_schema_ptable VALUES (10, date '2001-01-15', 'F');
INSERT 1
INSERT INTO public.multilevel_different_schema_ptable VALUES (11, date '2002-02-15', 'F');
INSERT 1
INSERT INTO public.multilevel_different_schema_ptable VALUES (12, date '2003-03-15', 'F');
INSERT 1

-- check data after insert
SELECT * FROM public.multilevel_different_schema_ptable ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
 2  | 02-15-2002 | M      
 3  | 03-15-2003 | M      
 4  | 01-15-2001 | F      
 5  | 02-15-2002 | F      
 6  | 03-15-2003 | F      
 7  | 01-15-2001 | M      
 8  | 02-15-2002 | M      
 9  | 03-15-2003 | M      
 10 | 01-15-2001 | F      
 11 | 02-15-2002 | F      
 12 | 03-15-2003 | F      
(12 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_boys ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
 2  | 02-15-2002 | M      
 3  | 03-15-2003 | M      
 7  | 01-15-2001 | M      
 8  | 02-15-2002 | M      
 9  | 03-15-2003 | M      
(6 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_1 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 1  | 01-15-2001 | M      
 7  | 01-15-2001 | M      
(2 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_2 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 2  | 02-15-2002 | M      
 8  | 02-15-2002 | M      
(2 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_3 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 3  | 03-15-2003 | M      
 9  | 03-15-2003 | M      
(2 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 4  | 01-15-2001 | F      
 5  | 02-15-2002 | F      
 6  | 03-15-2003 | F      
 10 | 01-15-2001 | F      
 11 | 02-15-2002 | F      
 12 | 03-15-2003 | F      
(6 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_girls_2_prt_1 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 4  | 01-15-2001 | F      
 10 | 01-15-2001 | F      
(2 rows)
SELECT * FROM schema2.multilevel_different_schema_ptable_1_prt_girls_2_prt_2 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 5  | 02-15-2002 | F      
 11 | 02-15-2002 | F      
(2 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls_2_prt_3 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 6  | 03-15-2003 | F      
 12 | 03-15-2003 | F      
(2 rows)

--- validate the indexes
EXPLAIN (COSTS OFF) SELECT * FROM public.multilevel_different_schema_ptable WHERE id = 3 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                                
   Merge Key: multilevel_different_schema_ptable_1_prt_boys_2_prt_1.year, multilevel_different_schema_ptable_1_prt_boys_2_prt_1.gender                   
   ->  Sort                                                                                                                                              
         Sort Key: multilevel_different_schema_ptable_1_prt_boys_2_prt_1.year, multilevel_different_schema_ptable_1_prt_boys_2_prt_1.gender              
         ->  Append                                                                                                                                      
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_1 on multilevel_different_schema_ptable_1_prt_boys_2_prt_1   
                     Index Cond: (id = 3)                                                                                                                
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_2 on multilevel_different_schema_ptable_1_prt_boys_2_prt_2   
                     Index Cond: (id = 3)                                                                                                                
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_3 on multilevel_different_schema_ptable_1_prt_boys_2_prt_3   
                     Index Cond: (id = 3)                                                                                                                
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_1 on multilevel_different_schema_ptable_1_prt_girls_2_prt_1 
                     Index Cond: (id = 3)                                                                                                                
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_2 on multilevel_different_schema_ptable_1_prt_girls_2_prt_2 
                     Index Cond: (id = 3)                                                                                                                
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_3 on multilevel_different_schema_ptable_1_prt_girls_2_prt_3 
                     Index Cond: (id = 3)                                                                                                                
 Optimizer: Postgres query optimizer                                                                                                                     
(18 rows)
SELECT * FROM public.multilevel_different_schema_ptable WHERE id = 6 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 6  | 03-15-2003 | F      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_boys WHERE id = 7 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                              
   Merge Key: multilevel_different_schema_ptable_1_prt_boys.year, multilevel_different_schema_ptable_1_prt_boys.gender                                 
   ->  Sort                                                                                                                                            
         Sort Key: multilevel_different_schema_ptable_1_prt_boys.year, multilevel_different_schema_ptable_1_prt_boys.gender                            
         ->  Append                                                                                                                                    
               ->  Bitmap Heap Scan on multilevel_different_schema_ptable_1_prt_boys                                                                   
                     Recheck Cond: (id = 7)                                                                                                            
                     ->  Bitmap Index Scan on multilevel_different_schema_ptable_idx_1_prt_boys                                                        
                           Index Cond: (id = 7)                                                                                                        
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_1 on multilevel_different_schema_ptable_1_prt_boys_2_prt_1 
                     Index Cond: (id = 7)                                                                                                              
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_2 on multilevel_different_schema_ptable_1_prt_boys_2_prt_2 
                     Index Cond: (id = 7)                                                                                                              
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_3 on multilevel_different_schema_ptable_1_prt_boys_2_prt_3 
                     Index Cond: (id = 7)                                                                                                              
 Optimizer: Postgres query optimizer                                                                                                                   
(16 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_boys WHERE id = 7 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 7  | 01-15-2001 | M      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_2 WHERE id = 8 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                        
   Merge Key: year, gender                                                                                                                       
   ->  Sort                                                                                                                                      
         Sort Key: year, gender                                                                                                                  
         ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_2 on multilevel_different_schema_ptable_1_prt_boys_2_prt_2 
               Index Cond: (id = 8)                                                                                                              
 Optimizer: Postgres query optimizer                                                                                                             
(7 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_2 WHERE id = 8 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 8  | 02-15-2002 | M      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_3 WHERE id = 9 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                        
   Merge Key: year, gender                                                                                                                       
   ->  Sort                                                                                                                                      
         Sort Key: year, gender                                                                                                                  
         ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_boys_2_prt_3 on multilevel_different_schema_ptable_1_prt_boys_2_prt_3 
               Index Cond: (id = 9)                                                                                                              
 Optimizer: Postgres query optimizer                                                                                                             
(7 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_boys_2_prt_3 WHERE id = 9 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 9  | 03-15-2003 | M      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls WHERE id = 10 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                                
   Merge Key: multilevel_different_schema_ptable_1_prt_girls.year, multilevel_different_schema_ptable_1_prt_girls.gender                                 
   ->  Sort                                                                                                                                              
         Sort Key: multilevel_different_schema_ptable_1_prt_girls.year, multilevel_different_schema_ptable_1_prt_girls.gender                            
         ->  Append                                                                                                                                      
               ->  Bitmap Heap Scan on multilevel_different_schema_ptable_1_prt_girls                                                                    
                     Recheck Cond: (id = 10)                                                                                                             
                     ->  Bitmap Index Scan on multilevel_different_schema_ptable_idx_1_prt_girls                                                         
                           Index Cond: (id = 10)                                                                                                         
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_1 on multilevel_different_schema_ptable_1_prt_girls_2_prt_1 
                     Index Cond: (id = 10)                                                                                                               
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_2 on multilevel_different_schema_ptable_1_prt_girls_2_prt_2 
                     Index Cond: (id = 10)                                                                                                               
               ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_3 on multilevel_different_schema_ptable_1_prt_girls_2_prt_3 
                     Index Cond: (id = 10)                                                                                                               
 Optimizer: Postgres query optimizer                                                                                                                     
(16 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls WHERE id = 10 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 10 | 01-15-2001 | F      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_girls_2_prt_1 WHERE id = 10 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                          
   Merge Key: year, gender                                                                                                                         
   ->  Sort                                                                                                                                        
         Sort Key: year, gender                                                                                                                    
         ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_1 on multilevel_different_schema_ptable_1_prt_girls_2_prt_1 
               Index Cond: (id = 10)                                                                                                               
 Optimizer: Postgres query optimizer                                                                                                               
(7 rows)
SELECT * FROM schema1.multilevel_different_schema_ptable_1_prt_girls_2_prt_1 WHERE id = 10 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 10 | 01-15-2001 | F      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM schema2.multilevel_different_schema_ptable_1_prt_girls_2_prt_2 WHERE id = 11 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                          
   Merge Key: year, gender                                                                                                                         
   ->  Sort                                                                                                                                        
         Sort Key: year, gender                                                                                                                    
         ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_2 on multilevel_different_schema_ptable_1_prt_girls_2_prt_2 
               Index Cond: (id = 11)                                                                                                               
 Optimizer: Postgres query optimizer                                                                                                               
(7 rows)
SELECT * FROM schema2.multilevel_different_schema_ptable_1_prt_girls_2_prt_2 WHERE id = 11 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 11 | 02-15-2002 | F      
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls_2_prt_3 WHERE id = 12 ORDER BY 1, 2, 3;
 QUERY PLAN                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                          
   Merge Key: year, gender                                                                                                                         
   ->  Sort                                                                                                                                        
         Sort Key: year, gender                                                                                                                    
         ->  Index Scan using multilevel_different_schema_ptable_idx_1_prt_girls_2_prt_3 on multilevel_different_schema_ptable_1_prt_girls_2_prt_3 
               Index Cond: (id = 12)                                                                                                               
 Optimizer: Postgres query optimizer                                                                                                               
(7 rows)
SELECT * FROM public.multilevel_different_schema_ptable_1_prt_girls_2_prt_3 WHERE id = 12 ORDER BY 1, 2, 3;
 id | year       | gender 
----+------------+--------
 12 | 03-15-2003 | F      
(1 row)

--------------------------------------------------------------------------------
-- PARTITION INDEX INHERITANCE TESTS
-- Ensure that partitioned index hierarchies are correctly established post-upgrade
--------------------------------------------------------------------------------

-- pt_inh_t1
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_inh_t1%';
 table_name | index_name    | indisvalid | column_num | column_name 
------------+---------------+------------+------------+-------------
 pt_inh_t1  | pt_inh_t1_idx | t          | 1          | a           
(1 row)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_inh_t1%';
 table_name            | index_name                | indisvalid | has_child | column_num | column_name 
-----------------------+---------------------------+------------+-----------+------------+-------------
 pt_inh_t1_1_prt_part1 | pt_inh_t1_idx_1_prt_part1 | t          | f         | 1          | a           
(1 row)
SELECT * FROM dependencies() WHERE classtype = 'i' AND (depname LIKE '%inh_t1%' OR refname LIKE '%inh_t1%') ORDER BY depname, refname;
 depname                   | classtype | refname               | refclasstype | deptype 
---------------------------+-----------+-----------------------+--------------+---------
 pt_inh_t1_idx             | i         | pt_inh_t1             | r            | a       
 pt_inh_t1_idx_1_prt_part1 | i         | pt_inh_t1_1_prt_part1 | r            | a       
 pt_inh_t1_idx_1_prt_part1 | i         | pt_inh_t1_idx         | i            | I       
(3 rows)

DROP INDEX pt_inh_t1_idx;
DROP

SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_inh_t1%';
 table_name | index_name | indisvalid | column_num | column_name 
------------+------------+------------+------------+-------------
(0 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_inh_t1%';
 table_name | index_name | indisvalid | has_child | column_num | column_name 
------------+------------+------------+-----------+------------+-------------
(0 rows)
SELECT * FROM dependencies() WHERE classtype = 'i' AND (depname LIKE '%inh_t1%' OR refname LIKE '%inh_t1%') ORDER BY depname, refname;
 depname | classtype | refname | refclasstype | deptype 
---------+-----------+---------+--------------+---------
(0 rows)

-- pt_inh_t2
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_inh_t2%';
 table_name | index_name    | indisvalid | column_num | column_name 
------------+---------------+------------+------------+-------------
 pt_inh_t2  | pt_inh_t2_idx | t          | 1          | a           
(1 row)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_inh_t2%';
 table_name                    | index_name                        | indisvalid | has_child | column_num | column_name 
-------------------------------+-----------------------------------+------------+-----------+------------+-------------
 pt_inh_t2_1_prt_part1         | pt_inh_t2_idx_1_prt_part1         | t          | t         | 1          | a           
 pt_inh_t2_1_prt_part1_2_prt_a | pt_inh_t2_idx_1_prt_part1_2_prt_a | t          | f         | 1          | a           
(2 rows)
SELECT * FROM dependencies() WHERE classtype = 'i' AND (depname LIKE '%inh_t2%' OR refname LIKE '%inh_t2%') ORDER BY depname, refname;
 depname                           | classtype | refname                       | refclasstype | deptype 
-----------------------------------+-----------+-------------------------------+--------------+---------
 pt_inh_t2_idx                     | i         | pt_inh_t2                     | r            | a       
 pt_inh_t2_idx_1_prt_part1         | i         | pt_inh_t2_1_prt_part1         | r            | a       
 pt_inh_t2_idx_1_prt_part1         | i         | pt_inh_t2_idx                 | i            | I       
 pt_inh_t2_idx_1_prt_part1_2_prt_a | i         | pt_inh_t2_1_prt_part1_2_prt_a | r            | a       
 pt_inh_t2_idx_1_prt_part1_2_prt_a | i         | pt_inh_t2_idx_1_prt_part1     | i            | I       
(5 rows)

DROP INDEX pt_inh_t2_idx;
DROP

SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_inh_t2%';
 table_name | index_name | indisvalid | column_num | column_name 
------------+------------+------------+------------+-------------
(0 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_inh_t2%';
 table_name | index_name | indisvalid | has_child | column_num | column_name 
------------+------------+------------+-----------+------------+-------------
(0 rows)
SELECT * FROM dependencies() WHERE classtype = 'i' AND (depname LIKE '%inh_t2%' OR refname LIKE '%inh_t2%') ORDER BY depname, refname;
 depname | classtype | refname | refclasstype | deptype 
---------+-----------+---------+--------------+---------
(0 rows)

--------------------------------------------------------------------------------
-- HEAP PARTITIONED TABLE INDEXES
--------------------------------------------------------------------------------

-- pt_heap_unique1_uniqueidx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 < 10 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                                                                 
                     Recheck Cond: (unique1 < 10)                                                                                           
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2                                      
                           Index Cond: (unique1 < 10)                                                                                       
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: (unique1 < 10)                                                                                                 
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: (unique1 < 10)                                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (unique1 < 10)                                                                                             
 Optimizer: Postgres query optimizer                                                                                                        
(16 rows)
SELECT * FROM pt_heap WHERE unique1 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 7       | 17      | 0   | 2    | 2   | 2      | 2       | 82       | 82          | 182       | 4    | 5   | GAAAAA   | RAAAAA   | HHHHxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
(10 rows)

-- pt_heap_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique2 < 10 ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_1.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_1.unique1                                       
         ->  Append                                                                                   
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (unique2 < 10)                                                           
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (unique2 < 10)                                                           
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                    
                     Filter: (unique2 < 10)                                                           
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key 
 Optimizer: Postgres query optimizer                                                                  
(13 rows)
SELECT * FROM pt_heap WHERE unique2 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 15      | 9       | 0   | 0    | 0   | 0      | 0       | 0        | 0           | 300       | 0    | 1   | UEAAAA   | JAAAAA   | HHHHxx  
 16      | 8       | 1   | 1    | 5   | 5      | 5       | 25       | 25          | 425       | 10   | 11  | JQAAAA   | IAAAAA   | AAAAxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 18      | 6       | 0   | 2    | 0   | 10     | 0       | 70       | 70          | 170       | 0    | 1   | UZAAAA   | GAAAAA   | OOOOxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(14 rows)

-- pt_heap_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2                
                     Index Cond: (unique2 < 15)                                                                                             
                     Filter: (unique1 < 10)                                                                                                 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: ((unique1 < 10) AND (unique2 < 15))                                                                            
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: ((unique1 < 10) AND (unique2 < 15))                                                                        
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: ((unique1 < 10) AND (unique2 < 15))                                                                        
 Optimizer: Postgres query optimizer                                                                                                        
(15 rows)
SELECT * FROM pt_heap WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
(4 rows)

-- pt_heap_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_two_four_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2               
                     Index Cond: ((two = 1) AND (four = 3))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: ((two = 1) AND (four = 3))                                                                                     
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_two_key on pt_heap_1_prt_added_part_2_prt_subpart1_2          
                     Index Cond: ((two = 1) AND (four = 3))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: ((two = 1) AND (four = 3))                                                                                     
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Recheck Cond: ((two = 1) AND (four = 3))                                                                               
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_two_key                                           
                           Index Cond: ((two = 1) AND (four = 3))                                                                           
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: ((two = 1) AND (four = 3))                                                                                     
 Optimizer: Postgres query optimizer                                                                                                        
(20 rows)
SELECT * FROM pt_heap WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(8 rows)

-- pt_heap_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 QUERY PLAN                                                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                  
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                 
   ->  Sort                                                                                                                                
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                            
         ->  Append                                                                                                                        
               ->  Index Scan using pt_heap_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (string4 = 'OOOOxx'::name)                                                                                
                     Filter: (stringu2 = 'WAAAAA'::name)                                                                                   
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                        
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))                                                  
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: (string4 = 'OOOOxx'::name)                                                                                
                     Filter: (stringu2 = 'WAAAAA'::name)                                                                                   
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                   
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))                                                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                         
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                                                              
                     Filter: (stringu2 = 'WAAAAA'::name)                                                                                   
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_string4_key                                      
                           Index Cond: (string4 = 'OOOOxx'::name)                                                                          
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (string4 = 'OOOOxx'::name)                                                                                
                     Filter: (stringu2 = 'WAAAAA'::name)                                                                                   
 Optimizer: Postgres query optimizer                                                                                                       
(24 rows)
SELECT * FROM pt_heap WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
(1 row)

-- pt_heap_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE ten = 9 and twenty = 19 ORDER BY 1;
 QUERY PLAN                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                              
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
   ->  Sort                                                                                                                            
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                        
         ->  Append                                                                                                                    
               ->  Index Scan using pt_heap_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: ((ten = 9) AND (twenty = 19))                                                                         
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                    
                     Filter: ((ten = 9) AND (twenty = 19))                                                                             
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: ((ten = 9) AND (twenty = 19))                                                                         
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                               
                     Filter: ((ten = 9) AND (twenty = 19))                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: ((ten = 9) AND (twenty = 19))                                                                         
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: ((ten = 9) AND (twenty = 19))                                                                         
 Optimizer: Postgres query optimizer                                                                                                   
(18 rows)
SELECT * FROM pt_heap WHERE ten = 9 and twenty = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
(1 row)

-- Validate that inserts are working after upgrade
insert into pt_heap values (0,20,1,3,7,18,4,34,156,301,11,17,'GFABCD','PPAVxx','HJKFxx');
INSERT 1

-- pt_heap_unique1_uniqueidx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 = 0 ORDER BY 1;
 QUERY PLAN                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                                                             
   ->  Append                                                                                                                         
         ->  Index Scan using pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
               Index Cond: (unique1 = 0)                                                                                              
         ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
               Filter: (unique1 = 0)                                                                                                  
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_1 
               Index Cond: (unique1 = 0)                                                                                              
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
               Index Cond: (unique1 = 0)                                                                                              
 Optimizer: Postgres query optimizer                                                                                                  
(11 rows)
SELECT * FROM pt_heap WHERE unique1 = 0 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(2 rows)

-- pt_heap_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2                
                     Index Cond: (unique2 = 20)                                                                                             
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_unique2_key on pt_heap_1_prt_added_part_2_prt_subpart1_2      
                     Index Cond: (unique2 = 20)                                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (unique2 = 20)                                                                                             
 Optimizer: Postgres query optimizer                                                                                                        
(12 rows)
SELECT * FROM pt_heap WHERE unique2 = 20 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
(2 rows)

-- pt_heap_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 = 0 and unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                                                             
   ->  Append                                                                                                                         
         ->  Index Scan using pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
               Index Cond: ((unique1 = 0) AND (unique2 = 20))                                                                         
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
               Index Cond: ((unique1 = 0) AND (unique2 = 20))                                                                         
 Optimizer: Postgres query optimizer                                                                                                  
(7 rows)
SELECT * FROM pt_heap WHERE unique1 = 0 and unique2 = 20 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_heap_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_two_four_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2               
                     Index Cond: ((two = 1) AND (four = 3))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: ((two = 1) AND (four = 3))                                                                                     
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_two_key on pt_heap_1_prt_added_part_2_prt_subpart1_2          
                     Index Cond: ((two = 1) AND (four = 3))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: ((two = 1) AND (four = 3))                                                                                     
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Recheck Cond: ((two = 1) AND (four = 3))                                                                               
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_two_key                                           
                           Index Cond: ((two = 1) AND (four = 3))                                                                           
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: ((two = 1) AND (four = 3))                                                                                     
 Optimizer: Postgres query optimizer                                                                                                        
(20 rows)
SELECT * FROM pt_heap WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_heap_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE ten = 7 and twenty = 18 ORDER BY 1;
 QUERY PLAN                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                              
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
   ->  Sort                                                                                                                            
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                        
         ->  Append                                                                                                                    
               ->  Index Scan using pt_heap_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: ((ten = 7) AND (twenty = 18))                                                                         
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                    
                     Filter: ((ten = 7) AND (twenty = 18))                                                                             
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: ((ten = 7) AND (twenty = 18))                                                                         
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                               
                     Filter: ((ten = 7) AND (twenty = 18))                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: ((ten = 7) AND (twenty = 18))                                                                         
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: ((ten = 7) AND (twenty = 18))                                                                         
 Optimizer: Postgres query optimizer                                                                                                   
(18 rows)
SELECT * FROM pt_heap WHERE ten = 7 and twenty = 18 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_heap_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE string4 = 'HJKFxx' ORDER BY 1;
 QUERY PLAN                                                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                  
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                 
   ->  Sort                                                                                                                                
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                            
         ->  Append                                                                                                                        
               ->  Index Scan using pt_heap_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (string4 = 'HJKFxx'::name)                                                                                
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                        
                     Filter: (string4 = 'HJKFxx'::name)                                                                                    
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: (string4 = 'HJKFxx'::name)                                                                                
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                   
                     Filter: (string4 = 'HJKFxx'::name)                                                                                    
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_string4_key on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: (string4 = 'HJKFxx'::name)                                                                                
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (string4 = 'HJKFxx'::name)                                                                                
 Optimizer: Postgres query optimizer                                                                                                       
(18 rows)
SELECT * FROM pt_heap WHERE string4 = 'HJKFxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_heap_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE hundred = 4 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                                                                 
                     Recheck Cond: (hundred = 4)                                                                                            
                     ->  Bitmap Index Scan on pt_heap_dropped_root_idx_1_prt_part1_2_prt_subpart1_2                                         
                           Index Cond: (hundred = 4)                                                                                        
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: (hundred = 4)                                                                                                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (hundred = 4)                                                                                                  
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (hundred = 4)                                                                                                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (hundred = 4)                                                                                                  
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (hundred = 4)                                                                                                  
 Optimizer: Postgres query optimizer                                                                                                        
(22 rows)
SELECT * FROM pt_heap WHERE hundred=4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 4       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(5 rows)

-- pt_heap_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_heap_1_prt_part1.unique1                                                              
   ->  Sort                                                                                            
         Sort Key: pt_heap_1_prt_part1.unique1                                                         
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1                                             
                     Filter: (twothousand = 156)                                                       
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 156)                                                       
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 156)                                                       
 Optimizer: Postgres query optimizer                                                                   
(14 rows)
SELECT * FROM pt_heap_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_heap_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE fivethous = 301 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_leaf_idx on pt_heap_1_prt_part1_2_prt_subpart1_2                                                
                     Index Cond: (fivethous = 301)                                                                                          
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: (fivethous = 301)                                                                                              
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (fivethous = 301)                                                                                              
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (fivethous = 301)                                                                                              
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (fivethous = 301)                                                                                              
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (fivethous = 301)                                                                                              
 Optimizer: Postgres query optimizer                                                                                                        
(20 rows)
SELECT * FROM pt_heap WHERE fivethous=301 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_heap_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE stringu1 = 'GFABCD' ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                                                                 
                     Filter: (stringu1 = 'GFABCD'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2                                      
               ->  Index Scan using pt_heap_exchange1_idx on pt_heap_1_prt_part1_2_prt_subpart1_1                                           
                     Index Cond: (stringu1 = 'GFABCD'::name)                                                                                
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (stringu1 = 'GFABCD'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (stringu1 = 'GFABCD'::name)                                                                                    
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (stringu1 = 'GFABCD'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (stringu1 = 'GFABCD'::name)                                                                                    
 Optimizer: Postgres query optimizer                                                                                                        
(21 rows)
SELECT * FROM pt_heap WHERE stringu1 = 'GFABCD' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- Validate that updates are working after upgrade

UPDATE pt_heap SET unique1 = 1 WHERE unique1 = 0;
UPDATE 2
UPDATE pt_heap SET unique2 = 19 WHERE unique2 = 20;
UPDATE 2
UPDATE pt_heap SET two = 2, four = 4 WHERE two = 1 and four = 3;
UPDATE 9
UPDATE pt_heap SET ten = 2, twenty = 12 WHERE ten = 7 and twenty = 18;
UPDATE 1
UPDATE pt_heap SET string4 = 'HJKFyy' WHERE string4 = 'HJKFxx';
UPDATE 1
UPDATE pt_heap SET hundred = 8 WHERE hundred = 4;
UPDATE 5
UPDATE pt_heap SET twothousand = 199 WHERE twothousand = 156;
UPDATE 1
UPDATE pt_heap SET fivethous = 417 WHERE fivethous = 301;
UPDATE 1
UPDATE pt_heap SET stringu1 = 'ABCDEF' WHERE stringu1 = 'GFABCD';
UPDATE 1

-- pt_heap_unique1_uniqueidx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 = 1 ORDER BY 1;
 QUERY PLAN                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                                                             
   ->  Append                                                                                                                         
         ->  Index Scan using pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
               Index Cond: (unique1 = 1)                                                                                              
         ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
               Filter: (unique1 = 1)                                                                                                  
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_1 
               Index Cond: (unique1 = 1)                                                                                              
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
               Index Cond: (unique1 = 1)                                                                                              
 Optimizer: Postgres query optimizer                                                                                                  
(11 rows)
SELECT * FROM pt_heap WHERE unique1 = 1 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 1       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(3 rows)

-- pt_heap_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2                
                     Index Cond: (unique2 = 19)                                                                                             
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_unique2_key on pt_heap_1_prt_added_part_2_prt_subpart1_2      
                     Index Cond: (unique2 = 19)                                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (unique2 = 19)                                                                                             
 Optimizer: Postgres query optimizer                                                                                                        
(12 rows)
SELECT * FROM pt_heap WHERE unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 4       | 19      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
(3 rows)

-- pt_heap_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                                                             
   ->  Append                                                                                                                         
         ->  Index Scan using pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
               Index Cond: ((unique1 = 1) AND (unique2 = 19))                                                                         
         ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
               Index Cond: ((unique1 = 1) AND (unique2 = 19))                                                                         
 Optimizer: Postgres query optimizer                                                                                                  
(7 rows)
SELECT * FROM pt_heap WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_heap_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE two = 2 and four = 4 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_two_four_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2               
                     Index Cond: ((two = 2) AND (four = 4))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: ((two = 2) AND (four = 4))                                                                                     
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_two_key on pt_heap_1_prt_added_part_2_prt_subpart1_2          
                     Index Cond: ((two = 2) AND (four = 4))                                                                                 
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: ((two = 2) AND (four = 4))                                                                                     
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_two_key on pt_heap_1_prt_default_part_2_prt_subpart1_1      
                     Index Cond: ((two = 2) AND (four = 4))                                                                                 
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: ((two = 2) AND (four = 4))                                                                                     
 Optimizer: Postgres query optimizer                                                                                                        
(18 rows)
SELECT * FROM pt_heap WHERE two = 2 and four = 4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 2   | 4    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 2   | 4    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 2   | 4    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 2   | 4    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 2   | 4    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 2   | 4    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 2   | 4    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_heap_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE ten = 2 and twenty = 12 ORDER BY 1;
 QUERY PLAN                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                              
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
   ->  Sort                                                                                                                            
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                        
         ->  Append                                                                                                                    
               ->  Index Scan using pt_heap_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: ((ten = 2) AND (twenty = 12))                                                                         
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                    
                     Filter: ((ten = 2) AND (twenty = 12))                                                                             
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: ((ten = 2) AND (twenty = 12))                                                                         
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                               
                     Filter: ((ten = 2) AND (twenty = 12))                                                                             
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: ((ten = 2) AND (twenty = 12))                                                                         
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_ten_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: ((ten = 2) AND (twenty = 12))                                                                         
 Optimizer: Postgres query optimizer                                                                                                   
(18 rows)
SELECT * FROM pt_heap WHERE ten = 2 and twenty = 12 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_heap_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE string4 = 'HJKFyy' ORDER BY 1;
 QUERY PLAN                                                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                  
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                 
   ->  Sort                                                                                                                                
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                            
         ->  Append                                                                                                                        
               ->  Index Scan using pt_heap_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (string4 = 'HJKFyy'::name)                                                                                
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                        
                     Filter: (string4 = 'HJKFyy'::name)                                                                                    
               ->  Index Scan using pt_heap_1_prt_added_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_added_part_2_prt_subpart1_2     
                     Index Cond: (string4 = 'HJKFyy'::name)                                                                                
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                   
                     Filter: (string4 = 'HJKFyy'::name)                                                                                    
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_1_string4_key on pt_heap_1_prt_default_part_2_prt_subpart1_1 
                     Index Cond: (string4 = 'HJKFyy'::name)                                                                                
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_string4_key on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Index Cond: (string4 = 'HJKFyy'::name)                                                                                
 Optimizer: Postgres query optimizer                                                                                                       
(18 rows)
SELECT * FROM pt_heap WHERE string4 = 'HJKFyy' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_heap_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE hundred = 8 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_dropped_root_idx_1_prt_part1_2_prt_subpart1_2 on pt_heap_1_prt_part1_2_prt_subpart1_2           
                     Index Cond: (hundred = 8)                                                                                              
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: (hundred = 8)                                                                                                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (hundred = 8)                                                                                                  
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (hundred = 8)                                                                                                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (hundred = 8)                                                                                                  
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (hundred = 8)                                                                                                  
 Optimizer: Postgres query optimizer                                                                                                        
(20 rows)
SELECT * FROM pt_heap WHERE hundred=8 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 6       | 18      | 0   | 0    | 4   | 4      | 8       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 8       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 8       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 8       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(6 rows)

-- pt_heap_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_heap_1_prt_part1.unique1                                                              
   ->  Sort                                                                                            
         Sort Key: pt_heap_1_prt_part1.unique1                                                         
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1                                             
                     Filter: (twothousand = 199)                                                       
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1                  
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 199)                                                       
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 199)                                                       
 Optimizer: Postgres query optimizer                                                                   
(14 rows)
SELECT * FROM pt_heap_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_heap_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE fivethous = 417 ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Index Scan using pt_heap_leaf_idx on pt_heap_1_prt_part1_2_prt_subpart1_2                                                
                     Index Cond: (fivethous = 417)                                                                                          
               ->  Seq Scan on pt_heap_1_prt_part1_2_prt_subpart1_1                                                                         
                     Filter: (fivethous = 417)                                                                                              
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (fivethous = 417)                                                                                              
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (fivethous = 417)                                                                                              
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (fivethous = 417)                                                                                              
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (fivethous = 417)                                                                                              
 Optimizer: Postgres query optimizer                                                                                                        
(20 rows)
SELECT * FROM pt_heap WHERE fivethous=417 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_heap_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_heap WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 QUERY PLAN                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                                                   
   Merge Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                                  
   ->  Sort                                                                                                                                 
         Sort Key: pt_heap_1_prt_part1_2_prt_subpart1_2.unique1                                                                             
         ->  Append                                                                                                                         
               ->  Bitmap Heap Scan on pt_heap_1_prt_part1_2_prt_subpart1_2                                                                 
                     Filter: (stringu1 = 'ABCDEF'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2                                      
               ->  Index Scan using pt_heap_exchange1_idx on pt_heap_1_prt_part1_2_prt_subpart1_1                                           
                     Index Cond: (stringu1 = 'ABCDEF'::name)                                                                                
               ->  Bitmap Heap Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2                                                            
                     Filter: (stringu1 = 'ABCDEF'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_1_prt_added_part_2_prt_subpart1_2_unique1_key1                                        
               ->  Seq Scan on pt_heap_1_prt_added_part_2_prt_subpart1_1                                                                    
                     Filter: (stringu1 = 'ABCDEF'::name)                                                                                    
               ->  Bitmap Heap Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1                                                          
                     Filter: (stringu1 = 'ABCDEF'::name)                                                                                    
                     ->  Bitmap Index Scan on pt_heap_1_prt_default_part_2_prt_subpart1_1_unique1_key1                                      
               ->  Index Scan using pt_heap_1_prt_default_part_2_prt_subpart1_2_unique1_key1 on pt_heap_1_prt_default_part_2_prt_subpart1_2 
                     Filter: (stringu1 = 'ABCDEF'::name)                                                                                    
 Optimizer: Postgres query optimizer                                                                                                        
(21 rows)
SELECT * FROM pt_heap WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

--------------------------------------------------------------------------------
-- AO PARTITIONED TABLE INDEXES
--------------------------------------------------------------------------------

-- pt_ao_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 < 10 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (unique1 < 10)                                                    
                     ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (unique1 < 10)                                                
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (unique1 < 10)                                                          
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: (unique1 < 10)                                                    
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                           Index Cond: (unique1 < 10)                                                
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Recheck Cond: (unique1 < 10)                                                    
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                           Index Cond: (unique1 < 10)                                                
 Optimizer: Postgres query optimizer                                                                 
(20 rows)
SELECT * FROM pt_ao WHERE unique1 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 7       | 17      | 0   | 2    | 2   | 2      | 2       | 82       | 82          | 182       | 4    | 5   | GAAAAA   | RAAAAA   | HHHHxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
(10 rows)

-- pt_ao_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique2 < 10 ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_1.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_1.unique1                                       
         ->  Append                                                                                 
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (unique2 < 10)                                                         
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (unique2 < 10)                                                         
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                    
                     Filter: (unique2 < 10)                                                         
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key 
 Optimizer: Postgres query optimizer                                                                
(13 rows)
SELECT * FROM pt_ao WHERE unique2 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 15      | 9       | 0   | 0    | 0   | 0      | 0       | 0        | 0           | 300       | 0    | 1   | UEAAAA   | JAAAAA   | HHHHxx  
 16      | 8       | 1   | 1    | 5   | 5      | 5       | 25       | 25          | 425       | 10   | 11  | JQAAAA   | IAAAAA   | AAAAxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 18      | 6       | 0   | 2    | 0   | 10     | 0       | 70       | 70          | 170       | 0    | 1   | UZAAAA   | GAAAAA   | OOOOxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(14 rows)

-- pt_ao_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 < 15)                                                   
                     Filter: (unique1 < 10)                                                         
                     ->  Bitmap Index Scan on pt_ao_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 < 15)                                               
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: ((unique1 < 10) AND (unique2 < 15))                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (unique1 < 10)                                                   
                     Filter: (unique2 < 15)                                                         
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key 
                           Index Cond: (unique1 < 10)                                               
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (unique2 < 15)                                                   
                     Filter: (unique1 < 10)                                                         
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                           Index Cond: (unique2 < 15)                                               
 Optimizer: Postgres query optimizer                                                                
(23 rows)
SELECT * FROM pt_ao WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
(4 rows)

-- pt_ao_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 1) AND (four = 3))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 1) AND (four = 3))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 1) AND (four = 3))                                              
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(25 rows)
SELECT * FROM pt_ao WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(8 rows)

-- pt_ao_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                       
                     Filter: (stringu2 = 'WAAAAA'::name)                                            
                     ->  Bitmap Index Scan on pt_ao_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'OOOOxx'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))           
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                       
                     Filter: (stringu2 = 'WAAAAA'::name)                                            
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'OOOOxx'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))           
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                       
                     Filter: (stringu2 = 'WAAAAA'::name)                                            
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'OOOOxx'::name)                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                       
                     Filter: (stringu2 = 'WAAAAA'::name)                                            
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'OOOOxx'::name)                                   
 Optimizer: Postgres query optimizer                                                                
(30 rows)
SELECT * FROM pt_ao WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
(1 row)

-- pt_ao_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE ten = 9 and twenty = 19 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                            
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                       
                     ->  Bitmap Index Scan on pt_ao_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 9) AND (twenty = 19))                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 9) AND (twenty = 19))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 9) AND (twenty = 19))                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 9) AND (twenty = 19))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 9) AND (twenty = 19))                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 9) AND (twenty = 19))                                   
 Optimizer: Postgres query optimizer                                                                   
(26 rows)
SELECT * FROM pt_ao WHERE ten = 9 and twenty = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
(1 row)

-- Validate that inserts are working after upgrade
insert into pt_ao values (0,20,1,3,7,18,4,34,156,301,11,17,'GFABCD','PPAVxx','HJKFxx');
INSERT 1

-- pt_ao_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 = 0 ORDER BY 1;
 QUERY PLAN                                                                                    
-----------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                      
   ->  Append                                                                                  
         ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
               Recheck Cond: (unique1 = 0)                                                     
               ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: (unique1 = 0)                                                 
         ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
               Filter: (unique1 = 0)                                                           
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
               Recheck Cond: (unique1 = 0)                                                     
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                     Index Cond: (unique1 = 0)                                                 
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
               Recheck Cond: (unique1 = 0)                                                     
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                     Index Cond: (unique1 = 0)                                                 
 Optimizer: Postgres query optimizer                                                           
(17 rows)
SELECT * FROM pt_ao WHERE unique1 = 0 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(2 rows)

-- pt_ao_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 = 20)                                                   
                     ->  Bitmap Index Scan on pt_ao_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 = 20)                                               
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (unique2 = 20)                                                   
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique2_key   
                           Index Cond: (unique2 = 20)                                               
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Filter: (unique2 = 20)                                                         
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key 
 Optimizer: Postgres query optimizer                                                                
(17 rows)
SELECT * FROM pt_ao WHERE unique2 = 20 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
(2 rows)

-- pt_ao_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 = 0 and unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                   
----------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                     
   ->  Append                                                                                 
         ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
               Recheck Cond: (unique2 = 20)                                                   
               Filter: (unique1 = 0)                                                          
               ->  Bitmap Index Scan on pt_ao_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (unique2 = 20)                                               
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
               Recheck Cond: (unique2 = 20)                                                   
               Filter: (unique1 = 0)                                                          
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                     Index Cond: (unique2 = 20)                                               
 Optimizer: Postgres query optimizer                                                          
(13 rows)
SELECT * FROM pt_ao WHERE unique1 = 0 and unique2 = 20;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_ao_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 1) AND (four = 3))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 1) AND (four = 3))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 1) AND (four = 3))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 1) AND (four = 3))                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 1) AND (four = 3))                                              
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(25 rows)
SELECT * FROM pt_ao WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_ao_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE ten = 7 and twenty = 18 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                            
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                       
                     ->  Bitmap Index Scan on pt_ao_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 7) AND (twenty = 18))                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 7) AND (twenty = 18))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 7) AND (twenty = 18))                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 7) AND (twenty = 18))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 7) AND (twenty = 18))                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 7) AND (twenty = 18))                                   
 Optimizer: Postgres query optimizer                                                                   
(26 rows)
SELECT * FROM pt_ao WHERE ten = 7 and twenty = 18 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_ao_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE string4 = 'HJKFxx' ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'HJKFxx'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (string4 = 'HJKFxx'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'HJKFxx'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (string4 = 'HJKFxx'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'HJKFxx'::name)                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'HJKFxx'::name)                                   
 Optimizer: Postgres query optimizer                                                                
(26 rows)
SELECT * FROM pt_ao WHERE string4 = 'HJKFxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_ao_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE hundred = 4 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (hundred = 4)                                                     
                     ->  Bitmap Index Scan on pt_ao_dropped_root_idx_1_prt_part1_2_prt_subpart1_2    
                           Index Cond: (hundred = 4)                                                 
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (hundred = 4)                                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (hundred = 4)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (hundred = 4)                                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (hundred = 4)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (hundred = 4)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(23 rows)
SELECT * FROM pt_ao WHERE hundred=4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 4       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(5 rows)

-- pt_ao_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1.unique1                                                              
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1.unique1                                                         
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1                                             
                     Recheck Cond: (twothousand = 156)                                               
                     ->  Bitmap Index Scan on pt_ao_mid_idx                                          
                           Index Cond: (twothousand = 156)                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 156)                                                     
                     ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 156)                                                     
 Optimizer: Postgres query optimizer                                                                 
(15 rows)
SELECT * FROM pt_ao_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_ao_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE fivethous = 301 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (fivethous = 301)                                                 
                     ->  Bitmap Index Scan on pt_ao_leaf_idx                                         
                           Index Cond: (fivethous = 301)                                             
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (fivethous = 301)                                                       
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (fivethous = 301)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (fivethous = 301)                                                       
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (fivethous = 301)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (fivethous = 301)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(23 rows)
SELECT * FROM pt_ao WHERE fivethous=301 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_ao_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE stringu1 = 'GFABCD' ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (stringu1 = 'GFABCD'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                            
                     Recheck Cond: (stringu1 = 'GFABCD'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_exchange1_idx                                    
                           Index Cond: (stringu1 = 'GFABCD'::name)                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (stringu1 = 'GFABCD'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (stringu1 = 'GFABCD'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (stringu1 = 'GFABCD'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (stringu1 = 'GFABCD'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(24 rows)
SELECT * FROM pt_ao WHERE stringu1 = 'GFABCD' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- Validate that updates are working after upgrade

UPDATE pt_ao SET unique1 = 1 WHERE unique1 = 0;
UPDATE 2
UPDATE pt_ao SET unique2 = 19 WHERE unique2 = 20;
UPDATE 2
UPDATE pt_ao SET two = 2, four = 4 WHERE two = 1 and four = 3;
UPDATE 9
UPDATE pt_ao SET ten = 2, twenty = 12 WHERE ten = 7 and twenty = 18;
UPDATE 1
UPDATE pt_ao SET string4 = 'HJKFyy' WHERE string4 = 'HJKFxx';
UPDATE 1
UPDATE pt_ao SET hundred = 8 WHERE hundred = 4;
UPDATE 5
UPDATE pt_ao SET twothousand = 199 WHERE twothousand = 156;
UPDATE 1
UPDATE pt_ao SET fivethous = 417 WHERE fivethous = 301;
UPDATE 1
UPDATE pt_ao SET stringu1 = 'ABCDEF' WHERE stringu1 = 'GFABCD';
UPDATE 1

-- pt_ao_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 = 1 ORDER BY 1;
 QUERY PLAN                                                                                    
-----------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                      
   ->  Append                                                                                  
         ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
               Recheck Cond: (unique1 = 1)                                                     
               ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: (unique1 = 1)                                                 
         ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
               Filter: (unique1 = 1)                                                           
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
               Recheck Cond: (unique1 = 1)                                                     
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                     Index Cond: (unique1 = 1)                                                 
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
               Recheck Cond: (unique1 = 1)                                                     
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                     Index Cond: (unique1 = 1)                                                 
 Optimizer: Postgres query optimizer                                                           
(17 rows)
SELECT * FROM pt_ao WHERE unique1 = 1 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 1       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(3 rows)

-- pt_ao_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 = 19)                                                   
                     ->  Bitmap Index Scan on pt_ao_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 = 19)                                               
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (unique2 = 19)                                                   
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique2_key   
                           Index Cond: (unique2 = 19)                                               
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Filter: (unique2 = 19)                                                         
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key 
 Optimizer: Postgres query optimizer                                                                
(17 rows)
SELECT * FROM pt_ao WHERE unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 4       | 19      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
(3 rows)

-- pt_ao_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                   
----------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                     
   ->  Append                                                                                 
         ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
               Recheck Cond: (unique2 = 19)                                                   
               Filter: (unique1 = 1)                                                          
               ->  Bitmap Index Scan on pt_ao_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (unique2 = 19)                                               
         ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
               Recheck Cond: (unique2 = 19)                                                   
               Filter: (unique1 = 1)                                                          
               ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                     Index Cond: (unique2 = 19)                                               
 Optimizer: Postgres query optimizer                                                          
(13 rows)
SELECT * FROM pt_ao WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_ao_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE two = 2 and four = 4 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 2) AND (four = 4))                                        
                     ->  Bitmap Index Scan on pt_ao_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 2) AND (four = 4))                                    
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 2) AND (four = 4))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 2) AND (four = 4))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 2) AND (four = 4))                                    
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 2) AND (four = 4))                                              
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 2) AND (four = 4))                                        
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 2) AND (four = 4))                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 2) AND (four = 4))                                              
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(25 rows)
SELECT * FROM pt_ao WHERE two = 2 and four = 4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 2   | 4    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 2   | 4    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 2   | 4    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 2   | 4    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 2   | 4    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 2   | 4    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 2   | 4    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_ao_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE ten = 2 and twenty = 12 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                            
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                       
                     ->  Bitmap Index Scan on pt_ao_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 2) AND (twenty = 12))                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 2) AND (twenty = 12))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 2) AND (twenty = 12))                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 2) AND (twenty = 12))                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 2) AND (twenty = 12))                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 2) AND (twenty = 12))                                   
 Optimizer: Postgres query optimizer                                                                   
(26 rows)
SELECT * FROM pt_ao WHERE ten = 2 and twenty = 12 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_ao_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE string4 = 'HJKFyy' ORDER BY 1;
 QUERY PLAN                                                                                         
----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                           
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                         
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'HJKFyy'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (string4 = 'HJKFyy'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'HJKFyy'::name)                                   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (string4 = 'HJKFyy'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'HJKFyy'::name)                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'HJKFyy'::name)                                   
 Optimizer: Postgres query optimizer                                                                
(26 rows)
SELECT * FROM pt_ao WHERE string4 = 'HJKFyy' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_ao_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE hundred = 8 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (hundred = 8)                                                     
                     ->  Bitmap Index Scan on pt_ao_dropped_root_idx_1_prt_part1_2_prt_subpart1_2    
                           Index Cond: (hundred = 8)                                                 
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (hundred = 8)                                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (hundred = 8)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (hundred = 8)                                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (hundred = 8)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (hundred = 8)                                                           
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(23 rows)
SELECT * FROM pt_ao WHERE hundred=8 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 6       | 18      | 0   | 0    | 4   | 4      | 8       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 8       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 8       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 8       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(6 rows)

-- pt_ao_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1.unique1                                                              
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1.unique1                                                         
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1                                             
                     Recheck Cond: (twothousand = 199)                                               
                     ->  Bitmap Index Scan on pt_ao_mid_idx                                          
                           Index Cond: (twothousand = 199)                                           
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 199)                                                     
                     ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 199)                                                     
 Optimizer: Postgres query optimizer                                                                 
(15 rows)
SELECT * FROM pt_ao_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_ao_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE fivethous = 417 ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (fivethous = 417)                                                 
                     ->  Bitmap Index Scan on pt_ao_leaf_idx                                         
                           Index Cond: (fivethous = 417)                                             
               ->  Seq Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (fivethous = 417)                                                       
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (fivethous = 417)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (fivethous = 417)                                                       
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (fivethous = 417)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (fivethous = 417)                                                       
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(23 rows)
SELECT * FROM pt_ao WHERE fivethous=417 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_ao_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_ao WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 QUERY PLAN                                                                                          
-----------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                            
   Merge Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                          
         Sort Key: pt_ao_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                  
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (stringu1 = 'ABCDEF'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Bitmap Heap Scan on pt_ao_1_prt_part1_2_prt_subpart1_1                            
                     Recheck Cond: (stringu1 = 'ABCDEF'::name)                                       
                     ->  Bitmap Index Scan on pt_ao_exchange1_idx                                    
                           Index Cond: (stringu1 = 'ABCDEF'::name)                                   
               ->  Bitmap Heap Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (stringu1 = 'ABCDEF'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_ao_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (stringu1 = 'ABCDEF'::name)                                             
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (stringu1 = 'ABCDEF'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (stringu1 = 'ABCDEF'::name)                                             
                     ->  Bitmap Index Scan on pt_ao_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                 
(24 rows)
SELECT * FROM pt_ao WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

--------------------------------------------------------------------------------
-- AOCO PARTITIONED TABLE INDEXES
--------------------------------------------------------------------------------

-- pt_aoco_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 < 10 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (unique1 < 10)                                                      
                     ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (unique1 < 10)                                                  
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (unique1 < 10)                                                            
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: (unique1 < 10)                                                      
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                           Index Cond: (unique1 < 10)                                                  
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Recheck Cond: (unique1 < 10)                                                      
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                           Index Cond: (unique1 < 10)                                                  
 Optimizer: Postgres query optimizer                                                                   
(20 rows)
SELECT * FROM pt_aoco WHERE unique1 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 7       | 17      | 0   | 2    | 2   | 2      | 2       | 82       | 82          | 182       | 4    | 5   | GAAAAA   | RAAAAA   | HHHHxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
(10 rows)

-- pt_aoco_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique2 < 10 ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_1.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_1.unique1                                       
         ->  Append                                                                                   
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (unique2 < 10)                                                           
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (unique2 < 10)                                                           
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                    
                     Filter: (unique2 < 10)                                                           
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key 
 Optimizer: Postgres query optimizer                                                                  
(13 rows)
SELECT * FROM pt_aoco WHERE unique2 < 10 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
 15      | 9       | 0   | 0    | 0   | 0      | 0       | 0        | 0           | 300       | 0    | 1   | UEAAAA   | JAAAAA   | HHHHxx  
 16      | 8       | 1   | 1    | 5   | 5      | 5       | 25       | 25          | 425       | 10   | 11  | JQAAAA   | IAAAAA   | AAAAxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 18      | 6       | 0   | 2    | 0   | 10     | 0       | 70       | 70          | 170       | 0    | 1   | UZAAAA   | GAAAAA   | OOOOxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(14 rows)

-- pt_aoco_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 < 15)                                                     
                     Filter: (unique1 < 10)                                                           
                     ->  Bitmap Index Scan on pt_aoco_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 < 15)                                                 
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: ((unique1 < 10) AND (unique2 < 15))                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (unique1 < 10)                                                     
                     Filter: (unique2 < 15)                                                           
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key 
                           Index Cond: (unique1 < 10)                                                 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (unique2 < 15)                                                     
                     Filter: (unique1 < 10)                                                           
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                           Index Cond: (unique2 < 15)                                                 
 Optimizer: Postgres query optimizer                                                                  
(23 rows)
SELECT * FROM pt_aoco WHERE unique1 < 10 and unique2 < 15 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
 3       | 3       | 1   | 1    | 7   | 17     | 7       | 97       | 197         | 497       | 14   | 15  | JMAAAA   | VAAAAA   | HHHHxx  
(4 rows)

-- pt_aoco_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 1) AND (four = 3))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 1) AND (four = 3))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 1) AND (four = 3))                                                
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(25 rows)
SELECT * FROM pt_aoco WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(8 rows)

-- pt_aoco_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                         
                     Filter: (stringu2 = 'WAAAAA'::name)                                              
                     ->  Bitmap Index Scan on pt_aoco_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'OOOOxx'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                         
                     Filter: (stringu2 = 'WAAAAA'::name)                                              
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'OOOOxx'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: ((stringu2 = 'WAAAAA'::name) AND (string4 = 'OOOOxx'::name))             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                         
                     Filter: (stringu2 = 'WAAAAA'::name)                                              
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'OOOOxx'::name)                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'OOOOxx'::name)                                         
                     Filter: (stringu2 = 'WAAAAA'::name)                                              
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'OOOOxx'::name)                                     
 Optimizer: Postgres query optimizer                                                                  
(30 rows)
SELECT * FROM pt_aoco WHERE stringu2 = 'WAAAAA' and string4 = 'OOOOxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 2       | 2       | 0   | 2    | 6   | 6      | 6       | 66       | 166         | 466       | 12   | 13  | ELAAAA   | WAAAAA   | OOOOxx  
(1 row)

-- pt_aoco_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE ten = 9 and twenty = 19 ORDER BY 1;
 QUERY PLAN                                                                                              
---------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                              
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                         
                     ->  Bitmap Index Scan on pt_aoco_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 9) AND (twenty = 19))                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 9) AND (twenty = 19))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 9) AND (twenty = 19))                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 9) AND (twenty = 19))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 9) AND (twenty = 19))                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 9) AND (twenty = 19))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 9) AND (twenty = 19))                                     
 Optimizer: Postgres query optimizer                                                                     
(26 rows)
SELECT * FROM pt_aoco WHERE ten = 9 and twenty = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
(1 row)

-- Validate that inserts are working after upgrade
insert into pt_aoco values (0,20,1,3,7,18,4,34,156,301,11,17,'GFABCD','PPAVxx','HJKFxx');
INSERT 1

-- pt_aoco_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 = 0 ORDER BY 1;
 QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                        
   ->  Append                                                                                    
         ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
               Recheck Cond: (unique1 = 0)                                                       
               ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: (unique1 = 0)                                                   
         ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
               Filter: (unique1 = 0)                                                             
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
               Recheck Cond: (unique1 = 0)                                                       
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                     Index Cond: (unique1 = 0)                                                   
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
               Recheck Cond: (unique1 = 0)                                                       
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                     Index Cond: (unique1 = 0)                                                   
 Optimizer: Postgres query optimizer                                                             
(17 rows)
SELECT * FROM pt_aoco WHERE unique1 = 0 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 0       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(2 rows)

-- pt_aoco_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 = 20)                                                     
                     ->  Bitmap Index Scan on pt_aoco_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 = 20)                                                 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (unique2 = 20)                                                     
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique2_key   
                           Index Cond: (unique2 = 20)                                                 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Filter: (unique2 = 20)                                                           
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key 
 Optimizer: Postgres query optimizer                                                                  
(17 rows)
SELECT * FROM pt_aoco WHERE unique2 = 20 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 4       | 20      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
(2 rows)

-- pt_aoco_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 = 0 and unique2 = 20 ORDER BY 1;
 QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                       
   ->  Append                                                                                   
         ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
               Recheck Cond: (unique2 = 20)                                                     
               Filter: (unique1 = 0)                                                            
               ->  Bitmap Index Scan on pt_aoco_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (unique2 = 20)                                                 
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
               Recheck Cond: (unique2 = 20)                                                     
               Filter: (unique1 = 0)                                                            
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                     Index Cond: (unique2 = 20)                                                 
 Optimizer: Postgres query optimizer                                                            
(13 rows)
SELECT * FROM pt_aoco WHERE unique1 = 0 and unique2 = 20 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_aoco_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE two = 1 and four = 3 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 1) AND (four = 3))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 1) AND (four = 3))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 1) AND (four = 3))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 1) AND (four = 3))                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 1) AND (four = 3))                                                
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(25 rows)
SELECT * FROM pt_aoco WHERE two = 1 and four = 3 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 5       | 19      | 1   | 3    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 1   | 3    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 1   | 3    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 1   | 3    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 1   | 3    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 1   | 3    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 1   | 3    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 1   | 3    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_aoco_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE ten = 7 and twenty = 18 ORDER BY 1;
 QUERY PLAN                                                                                              
---------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                              
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                         
                     ->  Bitmap Index Scan on pt_aoco_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 7) AND (twenty = 18))                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 7) AND (twenty = 18))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 7) AND (twenty = 18))                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 7) AND (twenty = 18))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 7) AND (twenty = 18))                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 7) AND (twenty = 18))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 7) AND (twenty = 18))                                     
 Optimizer: Postgres query optimizer                                                                     
(26 rows)
SELECT * FROM pt_aoco WHERE ten = 7 and twenty = 18 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_aoco_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE string4 = 'HJKFxx' ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'HJKFxx'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (string4 = 'HJKFxx'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'HJKFxx'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (string4 = 'HJKFxx'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'HJKFxx'::name)                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'HJKFxx'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'HJKFxx'::name)                                     
 Optimizer: Postgres query optimizer                                                                  
(26 rows)
SELECT * FROM pt_aoco WHERE string4 = 'HJKFxx' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_aoco_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE hundred = 4 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (hundred = 4)                                                       
                     ->  Bitmap Index Scan on pt_aoco_dropped_root_idx_1_prt_part1_2_prt_subpart1_2    
                           Index Cond: (hundred = 4)                                                   
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (hundred = 4)                                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (hundred = 4)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (hundred = 4)                                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (hundred = 4)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (hundred = 4)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(23 rows)
SELECT * FROM pt_aoco WHERE hundred=4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
 6       | 18      | 0   | 0    | 4   | 4      | 4       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 9       | 15      | 0   | 2    | 4   | 14     | 4       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 4       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 4       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(5 rows)

-- pt_aoco_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1.unique1                                                              
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1.unique1                                                         
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1                                             
                     Recheck Cond: (twothousand = 156)                                                 
                     ->  Bitmap Index Scan on pt_aoco_mid_idx                                          
                           Index Cond: (twothousand = 156)                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 156)                                                       
                     ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 156)                                                       
 Optimizer: Postgres query optimizer                                                                   
(15 rows)
SELECT * FROM pt_aoco_1_prt_part1 WHERE twothousand = 156 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_aoco_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE fivethous = 301 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (fivethous = 301)                                                   
                     ->  Bitmap Index Scan on pt_aoco_leaf_idx                                         
                           Index Cond: (fivethous = 301)                                               
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (fivethous = 301)                                                         
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (fivethous = 301)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (fivethous = 301)                                                         
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (fivethous = 301)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (fivethous = 301)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(23 rows)
SELECT * FROM pt_aoco WHERE fivethous=301 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- pt_aoco_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE stringu1 = 'GFABCD' ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (stringu1 = 'GFABCD'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                            
                     Recheck Cond: (stringu1 = 'GFABCD'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_exchange1_idx                                    
                           Index Cond: (stringu1 = 'GFABCD'::name)                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (stringu1 = 'GFABCD'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (stringu1 = 'GFABCD'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (stringu1 = 'GFABCD'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (stringu1 = 'GFABCD'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(24 rows)
SELECT * FROM pt_aoco WHERE stringu1 = 'GFABCD' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 0       | 20      | 1   | 3    | 7   | 18     | 4       | 34       | 156         | 301       | 11   | 17  | GFABCD   | PPAVxx   | HJKFxx  
(1 row)

-- Validate that updates are working after upgrade

UPDATE pt_aoco SET unique1 = 1 WHERE unique1 = 0;
UPDATE 2
UPDATE pt_aoco SET unique2 = 19 WHERE unique2 = 20;
UPDATE 2
UPDATE pt_aoco SET two = 2, four = 4 WHERE two = 1 and four = 3;
UPDATE 9
UPDATE pt_aoco SET ten = 2, twenty = 12 WHERE ten = 7 and twenty = 18;
UPDATE 1
UPDATE pt_aoco SET string4 = 'HJKFyy' WHERE string4 = 'HJKFxx';
UPDATE 1
UPDATE pt_aoco SET hundred = 8 WHERE hundred = 4;
UPDATE 5
UPDATE pt_aoco SET twothousand = 199 WHERE twothousand = 156;
UPDATE 1
UPDATE pt_aoco SET fivethous = 417 WHERE fivethous = 301;
UPDATE 1
UPDATE pt_aoco SET stringu1 = 'ABCDEF' WHERE stringu1 = 'GFABCD';
UPDATE 1

-- pt_aoco_unique1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 = 1 ORDER BY 1;
 QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)                                                        
   ->  Append                                                                                    
         ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
               Recheck Cond: (unique1 = 1)                                                       
               ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
                     Index Cond: (unique1 = 1)                                                   
         ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
               Filter: (unique1 = 1)                                                             
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
               Recheck Cond: (unique1 = 1)                                                       
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
                     Index Cond: (unique1 = 1)                                                   
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
               Recheck Cond: (unique1 = 1)                                                       
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
                     Index Cond: (unique1 = 1)                                                   
 Optimizer: Postgres query optimizer                                                             
(17 rows)
SELECT * FROM pt_aoco WHERE unique1 = 1 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 1       | 1       | 1   | 1    | 9   | 9      | 9       | 89       | 189         | 389       | 18   | 19  | ZOAAAA   | XAAAAA   | VVVVxx  
 1       | 0       | 0   | 2    | 6   | 6      | 6       | 46       | 46          | 346       | 12   | 13  | OGAAAA   | YAAAAA   | AAAAxx  
(3 rows)

-- pt_aoco_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (unique2 = 19)                                                     
                     ->  Bitmap Index Scan on pt_aoco_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: (unique2 = 19)                                                 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (unique2 = 19)                                                     
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique2_key   
                           Index Cond: (unique2 = 19)                                                 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Filter: (unique2 = 19)                                                           
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key 
 Optimizer: Postgres query optimizer                                                                  
(17 rows)
SELECT * FROM pt_aoco WHERE unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 4       | 19      | 1   | 1    | 5   | 5      | 5       | 85       | 85          | 385       | 10   | 11  | BIAAAA   | UAAAAA   | AAAAxx  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
(3 rows)

-- pt_aoco_unique1_unique2_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                       
   ->  Append                                                                                   
         ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
               Recheck Cond: (unique2 = 19)                                                     
               Filter: (unique1 = 1)                                                            
               ->  Bitmap Index Scan on pt_aoco_unique2_idx_1_prt_part1_2_prt_subpart1_2        
                     Index Cond: (unique2 = 19)                                                 
         ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
               Recheck Cond: (unique2 = 19)                                                     
               Filter: (unique1 = 1)                                                            
               ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique2_key 
                     Index Cond: (unique2 = 19)                                                 
 Optimizer: Postgres query optimizer                                                            
(13 rows)
SELECT * FROM pt_aoco WHERE unique1 = 1 and unique2 = 19 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_aoco_two_four_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE two = 2 and four = 4 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: ((two = 2) AND (four = 4))                                          
                     ->  Bitmap Index Scan on pt_aoco_two_four_idx_1_prt_part1_2_prt_subpart1_2        
                           Index Cond: ((two = 2) AND (four = 4))                                      
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: ((two = 2) AND (four = 4))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Recheck Cond: ((two = 2) AND (four = 4))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_two_key        
                           Index Cond: ((two = 2) AND (four = 4))                                      
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: ((two = 2) AND (four = 4))                                                
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Recheck Cond: ((two = 2) AND (four = 4))                                          
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_two_key      
                           Index Cond: ((two = 2) AND (four = 4))                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: ((two = 2) AND (four = 4))                                                
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(25 rows)
SELECT * FROM pt_aoco WHERE two = 2 and four = 4 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 5       | 19      | 2   | 4    | 3   | 3      | 3       | 83       | 183         | 183       | 6    | 7   | BHAAAA   | TAAAAA   | VVVVxx  
 11      | 13      | 2   | 4    | 1   | 11     | 1       | 11       | 11          | 111       | 2    | 3   | NXAAAA   | NAAAAA   | HHHHxx  
 17      | 7       | 2   | 4    | 3   | 3      | 3       | 43       | 143         | 43        | 6    | 7   | XUAAAA   | HAAAAA   | VVVVxx  
 19      | 5       | 2   | 4    | 9   | 19     | 9       | 39       | 39          | 439       | 18   | 19  | XQAAAA   | FAAAAA   | HHHHxx  
 20      | 4       | 2   | 4    | 3   | 3      | 3       | 83       | 83          | 383       | 6    | 7   | ZHAAAA   | EAAAAA   | AAAAxx  
 21      | 3       | 2   | 4    | 1   | 11     | 1       | 11       | 111         | 211       | 2    | 3   | JBAAAA   | DAAAAA   | VVVVxx  
 23      | 1       | 2   | 4    | 1   | 11     | 1       | 31       | 131         | 431       | 2    | 3   | VJAAAA   | BAAAAA   | HHHHxx  
 24      | 0       | 2   | 4    | 7   | 7      | 7       | 47       | 147         | 147       | 14   | 15  | RFAAAA   | AAAAAA   | AAAAxx  
(9 rows)

-- pt_aoco_ten_twenty_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE ten = 2 and twenty = 12 ORDER BY 1;
 QUERY PLAN                                                                                              
---------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                                
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                               
   ->  Sort                                                                                              
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                          
         ->  Append                                                                                      
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                              
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                         
                     ->  Bitmap Index Scan on pt_aoco_ten_twenty_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: ((ten = 2) AND (twenty = 12))                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                      
                     Filter: ((ten = 2) AND (twenty = 12))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                         
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_ten_key          
                           Index Cond: ((ten = 2) AND (twenty = 12))                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                                 
                     Filter: ((ten = 2) AND (twenty = 12))                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                       
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_ten_key        
                           Index Cond: ((ten = 2) AND (twenty = 12))                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                       
                     Recheck Cond: ((ten = 2) AND (twenty = 12))                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_ten_key        
                           Index Cond: ((ten = 2) AND (twenty = 12))                                     
 Optimizer: Postgres query optimizer                                                                     
(26 rows)
SELECT * FROM pt_aoco WHERE ten = 2 and twenty = 12 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_aoco_string4_bitmap_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE string4 = 'HJKFyy' ORDER BY 1;
 QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                             
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                            
   ->  Sort                                                                                           
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                       
         ->  Append                                                                                   
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                           
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_string4_bitmap_idx_1_prt_part1_2_prt_subpart1_2 
                           Index Cond: (string4 = 'HJKFyy'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                   
                     Filter: (string4 = 'HJKFyy'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                      
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_string4_key   
                           Index Cond: (string4 = 'HJKFyy'::name)                                     
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                              
                     Filter: (string4 = 'HJKFyy'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                    
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_string4_key 
                           Index Cond: (string4 = 'HJKFyy'::name)                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                    
                     Recheck Cond: (string4 = 'HJKFyy'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_string4_key 
                           Index Cond: (string4 = 'HJKFyy'::name)                                     
 Optimizer: Postgres query optimizer                                                                  
(26 rows)
SELECT * FROM pt_aoco WHERE string4 = 'HJKFyy' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_aoco_dropped_root_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE hundred = 8 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (hundred = 8)                                                       
                     ->  Bitmap Index Scan on pt_aoco_dropped_root_idx_1_prt_part1_2_prt_subpart1_2    
                           Index Cond: (hundred = 8)                                                   
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (hundred = 8)                                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (hundred = 8)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (hundred = 8)                                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (hundred = 8)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (hundred = 8)                                                             
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(23 rows)
SELECT * FROM pt_aoco WHERE hundred=8 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
 6       | 18      | 0   | 0    | 4   | 4      | 8       | 64       | 64          | 364       | 8    | 9   | GHAAAA   | SAAAAA   | OOOOxx  
 8       | 16      | 0   | 2    | 8   | 18     | 8       | 98       | 98          | 298       | 16   | 17  | MLAAAA   | QAAAAA   | AAAAxx  
 9       | 15      | 0   | 2    | 4   | 14     | 8       | 74       | 174         | 274       | 8    | 9   | UDAAAA   | PAAAAA   | VVVVxx  
 13      | 11      | 0   | 2    | 4   | 14     | 8       | 94       | 94          | 494       | 8    | 9   | ATAAAA   | LAAAAA   | VVVVxx  
 22      | 2       | 0   | 2    | 4   | 14     | 8       | 14       | 114         | 214       | 8    | 9   | MBAAAA   | CAAAAA   | OOOOxx  
(6 rows)

-- pt_aoco_mid_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1.unique1                                                              
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1.unique1                                                         
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1                                             
                     Recheck Cond: (twothousand = 199)                                                 
                     ->  Bitmap Index Scan on pt_aoco_mid_idx                                          
                           Index Cond: (twothousand = 199)                                             
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (twothousand = 199)                                                       
                     ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (twothousand = 199)                                                       
 Optimizer: Postgres query optimizer                                                                   
(15 rows)
SELECT * FROM pt_aoco_1_prt_part1 WHERE twothousand = 199 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_aoco_leaf_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE fivethous = 417 ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Recheck Cond: (fivethous = 417)                                                   
                     ->  Bitmap Index Scan on pt_aoco_leaf_idx                                         
                           Index Cond: (fivethous = 417)                                               
               ->  Seq Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                                    
                     Filter: (fivethous = 417)                                                         
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (fivethous = 417)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (fivethous = 417)                                                         
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (fivethous = 417)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (fivethous = 417)                                                         
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(23 rows)
SELECT * FROM pt_aoco WHERE fivethous=417 ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

-- pt_aoco_exchange1_idx
EXPLAIN (COSTS OFF) SELECT * FROM pt_aoco WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                                                              
   Merge Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                             
   ->  Sort                                                                                            
         Sort Key: pt_aoco_1_prt_part1_2_prt_subpart1_2.unique1                                        
         ->  Append                                                                                    
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_2                            
                     Filter: (stringu1 = 'ABCDEF'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_unique1_unique2_idx_1_prt_part1_2_prt_subpart1_2 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_part1_2_prt_subpart1_1                            
                     Recheck Cond: (stringu1 = 'ABCDEF'::name)                                         
                     ->  Bitmap Index Scan on pt_aoco_exchange1_idx                                    
                           Index Cond: (stringu1 = 'ABCDEF'::name)                                     
               ->  Bitmap Heap Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2                       
                     Filter: (stringu1 = 'ABCDEF'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_2_unique1_key1   
               ->  Seq Scan on pt_aoco_1_prt_added_part_2_prt_subpart1_1                               
                     Filter: (stringu1 = 'ABCDEF'::name)                                               
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1                     
                     Filter: (stringu1 = 'ABCDEF'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_1_unique1_key1 
               ->  Bitmap Heap Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2                     
                     Filter: (stringu1 = 'ABCDEF'::name)                                               
                     ->  Bitmap Index Scan on pt_aoco_1_prt_default_part_2_prt_subpart1_2_unique1_key1 
 Optimizer: Postgres query optimizer                                                                   
(24 rows)
SELECT * FROM pt_aoco WHERE stringu1 = 'ABCDEF' ORDER BY 1;
 unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | even | odd | stringu1 | stringu2 | string4 
---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+------+-----+----------+----------+---------
 1       | 19      | 2   | 4    | 2   | 12     | 8       | 34       | 199         | 417       | 11   | 17  | ABCDEF   | PPAVxx   | HJKFyy  
(1 row)

--------------------------------------------------------------------------------
-- UNIQUE CONSTRAINT
--------------------------------------------------------------------------------
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name                               | constraint_name                                  | index_name                                       | constraint_type 
------------------------------------------+--------------------------------------------------+--------------------------------------------------+-----------------
 pt_unique_constraint                     | pt_unique_constraint_a_key                       | pt_unique_constraint_a_key                       | u               
 pt_unique_constraint_1_prt_part1_renamed | pt_unique_constraint_1_prt_part1_renamed_a_b_key | pt_unique_constraint_1_prt_part1_renamed_a_b_key | u               
 pt_unique_constraint_1_prt_added_part    | pt_unique_constraint_1_prt_added_part_a_b_key    | pt_unique_constraint_1_prt_added_part_a_b_key    | u               
 pt_unique_constraint_1_prt_default_part  | pt_unique_constraint_1_prt_default_part_a_b_key  | pt_unique_constraint_1_prt_default_part_a_b_key  | u               
 pt_unique_constraint_1_prt_part2_split_l | pt_unique_constraint_1_prt_part2_split_l_a_b_key | pt_unique_constraint_1_prt_part2_split_l_a_b_key | u               
 pt_unique_constraint_1_prt_part2_split_r | pt_unique_constraint_1_prt_part2_split_r_a_b_key | pt_unique_constraint_1_prt_part2_split_r_a_b_key | u               
(6 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name           | index_name                 | indisvalid | column_num | column_name 
----------------------+----------------------------+------------+------------+-------------
 pt_unique_constraint | pt_unique_constraint_a_key | t          | 1          | a           
 pt_unique_constraint | pt_unique_constraint_a_key | t          | 2          | b           
(2 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name                               | index_name                                       | indisvalid | has_child | column_num | column_name 
------------------------------------------+--------------------------------------------------+------------+-----------+------------+-------------
 pt_unique_constraint_1_prt_added_part    | pt_unique_constraint_1_prt_added_part_a_b_key    | t          | f         | 1          | a           
 pt_unique_constraint_1_prt_added_part    | pt_unique_constraint_1_prt_added_part_a_b_key    | t          | f         | 2          | b           
 pt_unique_constraint_1_prt_default_part  | pt_unique_constraint_1_prt_default_part_a_b_key  | t          | f         | 1          | a           
 pt_unique_constraint_1_prt_default_part  | pt_unique_constraint_1_prt_default_part_a_b_key  | t          | f         | 2          | b           
 pt_unique_constraint_1_prt_part1_renamed | pt_unique_constraint_1_prt_part1_renamed_a_b_key | t          | f         | 1          | a           
 pt_unique_constraint_1_prt_part1_renamed | pt_unique_constraint_1_prt_part1_renamed_a_b_key | t          | f         | 2          | b           
 pt_unique_constraint_1_prt_part2_split_l | pt_unique_constraint_1_prt_part2_split_l_a_b_key | t          | f         | 1          | a           
 pt_unique_constraint_1_prt_part2_split_l | pt_unique_constraint_1_prt_part2_split_l_a_b_key | t          | f         | 2          | b           
 pt_unique_constraint_1_prt_part2_split_r | pt_unique_constraint_1_prt_part2_split_r_a_b_key | t          | f         | 1          | a           
 pt_unique_constraint_1_prt_part2_split_r | pt_unique_constraint_1_prt_part2_split_r_a_b_key | t          | f         | 2          | b           
(10 rows)

EXPLAIN SELECT * FROM pt_unique_constraint WHERE a = 1;
 QUERY PLAN                                                                                                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.13..7500.72 rows=5 width=30)                                                                                       
   ->  Append  (cost=0.13..7500.72 rows=2 width=30)                                                                                                                   
         ->  Index Only Scan using pt_unique_constraint_1_prt_part1_renamed_a_b_key on pt_unique_constraint_1_prt_part1_renamed  (cost=0.13..1800.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                                    
         ->  Index Only Scan using pt_unique_constraint_1_prt_added_part_a_b_key on pt_unique_constraint_1_prt_added_part  (cost=0.12..200.14 rows=1 width=30)        
               Index Cond: (a = 1)                                                                                                                                    
         ->  Index Only Scan using pt_unique_constraint_1_prt_default_part_a_b_key on pt_unique_constraint_1_prt_default_part  (cost=0.12..200.14 rows=1 width=30)    
               Index Cond: (a = 1)                                                                                                                                    
         ->  Index Only Scan using pt_unique_constraint_1_prt_part2_split_l_a_b_key on pt_unique_constraint_1_prt_part2_split_l  (cost=0.12..200.14 rows=1 width=30)  
               Index Cond: (a = 1)                                                                                                                                    
         ->  Index Only Scan using pt_unique_constraint_1_prt_part2_split_r_a_b_key on pt_unique_constraint_1_prt_part2_split_r  (cost=0.13..5100.14 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                                    
 Optimizer: Postgres query optimizer                                                                                                                                  
(13 rows)
SELECT * FROM pt_unique_constraint WHERE a = 1;
 a | b                         
---+---------------------------
 1 | 1                         
(1 row)

ALTER TABLE pt_unique_constraint DROP CONSTRAINT pt_unique_constraint_a_key;
ALTER

-- expect 0 rows
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name | constraint_name | index_name | constraint_type 
------------+-----------------+------------+-----------------
(0 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name | index_name | indisvalid | column_num | column_name 
------------+------------+------------+------------+-------------
(0 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_constraint%';
 table_name | index_name | indisvalid | has_child | column_num | column_name 
------------+------------+------------+-----------+------------+-------------
(0 rows)

--------------------------------------------------------------------------------
-- UNIQUE CONSTRAINT WITH EXCHANGE
--------------------------------------------------------------------------------
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name                     | constraint_name                        | index_name                             | constraint_type 
--------------------------------+----------------------------------------+----------------------------------------+-----------------
 pt_unique_exchange             | pt_unique_exchange_a_key               | pt_unique_exchange_a_key               | u               
 pt_unique_exchange_1_prt_part2 | pt_unique_exchange_1_prt_part2_a_b_key | pt_unique_exchange_1_prt_part2_a_b_key | u               
 pt_unique_exchange_1_prt_part1 | pt_unique_exchange_1_prt_part1_a_b_key | pt_unique_exchange_1_prt_part1_a_b_key | u               
(3 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name         | index_name               | indisvalid | column_num | column_name 
--------------------+--------------------------+------------+------------+-------------
 pt_unique_exchange | pt_unique_exchange_a_key | t          | 1          | a           
 pt_unique_exchange | pt_unique_exchange_a_key | t          | 2          | b           
(2 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name                     | index_name                             | indisvalid | has_child | column_num | column_name 
--------------------------------+----------------------------------------+------------+-----------+------------+-------------
 pt_unique_exchange_1_prt_part1 | pt_unique_exchange_1_prt_part1_a_b_key | t          | f         | 1          | a           
 pt_unique_exchange_1_prt_part1 | pt_unique_exchange_1_prt_part1_a_b_key | t          | f         | 2          | b           
 pt_unique_exchange_1_prt_part2 | pt_unique_exchange_1_prt_part2_a_b_key | t          | f         | 1          | a           
 pt_unique_exchange_1_prt_part2 | pt_unique_exchange_1_prt_part2_a_b_key | t          | f         | 2          | b           
(4 rows)

EXPLAIN SELECT * FROM pt_unique_exchange WHERE a = 1;
 QUERY PLAN                                                                                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.13..5600.30 rows=2 width=30)                                                                   
   ->  Append  (cost=0.13..5600.30 rows=1 width=30)                                                                                               
         ->  Index Only Scan using pt_unique_exchange_1_prt_part2_a_b_key on pt_unique_exchange_1_prt_part2  (cost=0.13..3500.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                
         ->  Index Only Scan using pt_unique_exchange_1_prt_part1_a_b_key on pt_unique_exchange_1_prt_part1  (cost=0.13..2100.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                
 Optimizer: Postgres query optimizer                                                                                                              
(7 rows)
SELECT * FROM pt_unique_exchange WHERE a = 1;
 a | b                         
---+---------------------------
 1 | 1                         
(1 row)

ALTER TABLE pt_unique_exchange DROP CONSTRAINT pt_unique_exchange_a_key;
ALTER

-- expect 0 rows
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name | constraint_name | index_name | constraint_type 
------------+-----------------+------------+-----------------
(0 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name | index_name | indisvalid | column_num | column_name 
------------+------------+------------+------------+-------------
(0 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_exchange%';
 table_name | index_name | indisvalid | has_child | column_num | column_name 
------------+------------+------------+-----------+------------+-------------
(0 rows)

--------------------------------------------------------------------------------
-- UNIQUE CONSTRAINT INSIDE CREATE TABLE DDL
--------------------------------------------------------------------------------
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name                                | constraint_name                                   | index_name                                        | constraint_type 
-------------------------------------------+---------------------------------------------------+---------------------------------------------------+-----------------
 pt_unique_inside_create_table             | pt_unique_inside_create_table_key                 | pt_unique_inside_create_table_key                 | u               
 pt_unique_inside_create_table_1_prt_part1 | pt_unique_inside_create_table_1_prt_part1_a_b_key | pt_unique_inside_create_table_1_prt_part1_a_b_key | u               
 pt_unique_inside_create_table_1_prt_part2 | pt_unique_inside_create_table_1_prt_part2_a_b_key | pt_unique_inside_create_table_1_prt_part2_a_b_key | u               
(3 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name                    | index_name                        | indisvalid | column_num | column_name 
-------------------------------+-----------------------------------+------------+------------+-------------
 pt_unique_inside_create_table | pt_unique_inside_create_table_key | t          | 1          | a           
 pt_unique_inside_create_table | pt_unique_inside_create_table_key | t          | 2          | b           
(2 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name                                | index_name                                        | indisvalid | has_child | column_num | column_name 
-------------------------------------------+---------------------------------------------------+------------+-----------+------------+-------------
 pt_unique_inside_create_table_1_prt_part1 | pt_unique_inside_create_table_1_prt_part1_a_b_key | t          | f         | 1          | a           
 pt_unique_inside_create_table_1_prt_part1 | pt_unique_inside_create_table_1_prt_part1_a_b_key | t          | f         | 2          | b           
 pt_unique_inside_create_table_1_prt_part2 | pt_unique_inside_create_table_1_prt_part2_a_b_key | t          | f         | 1          | a           
 pt_unique_inside_create_table_1_prt_part2 | pt_unique_inside_create_table_1_prt_part2_a_b_key | t          | f         | 2          | b           
(4 rows)

EXPLAIN SELECT * FROM pt_unique_inside_create_table WHERE a = 1;
 QUERY PLAN                                                                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.13..5600.30 rows=2 width=30)                                                                                         
   ->  Append  (cost=0.13..5600.30 rows=1 width=30)                                                                                                                     
         ->  Index Only Scan using pt_unique_inside_create_table_1_prt_part1_a_b_key on pt_unique_inside_create_table_1_prt_part1  (cost=0.13..2100.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                                      
         ->  Index Only Scan using pt_unique_inside_create_table_1_prt_part2_a_b_key on pt_unique_inside_create_table_1_prt_part2  (cost=0.13..3500.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                                      
 Optimizer: Postgres query optimizer                                                                                                                                    
(7 rows)
SELECT * FROM pt_unique_inside_create_table WHERE a = 1;
 a | b                         
---+---------------------------
 1 | 1                         
(1 row)

ALTER TABLE pt_unique_inside_create_table DROP CONSTRAINT pt_unique_inside_create_table_key;
ALTER

-- expect 0 rows
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name | constraint_name | index_name | constraint_type 
------------+-----------------+------------+-----------------
(0 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name | index_name | indisvalid | column_num | column_name 
------------+------------+------------+------------+-------------
(0 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_inside_create_table%';
 table_name | index_name | indisvalid | has_child | column_num | column_name 
------------+------------+------------+-----------+------------+-------------
(0 rows)

--------------------------------------------------------------------------------
-- UNIQUE INDEX WITH UNIQUE CONSTRAINT HAVING SAME NAME
--------------------------------------------------------------------------------
SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name                            | constraint_name                               | index_name                                    | constraint_type 
---------------------------------------+-----------------------------------------------+-----------------------------------------------+-----------------
 pt_unique_index_same_name             | pt_unique_index_same_name_a_key1              | pt_unique_index_same_name_a_key1              | u               
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_1_prt_part1_a_b_key | pt_unique_index_same_name_1_prt_part1_a_b_key | u               
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_1_prt_part2_a_b_key | pt_unique_index_same_name_1_prt_part2_a_b_key | u               
(3 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name                | index_name                       | indisvalid | column_num | column_name 
---------------------------+----------------------------------+------------+------------+-------------
 pt_unique_index_same_name | pt_unique_index_same_name_a_key  | t          | 1          | a           
 pt_unique_index_same_name | pt_unique_index_same_name_a_key  | t          | 2          | b           
 pt_unique_index_same_name | pt_unique_index_same_name_a_key1 | t          | 1          | a           
 pt_unique_index_same_name | pt_unique_index_same_name_a_key1 | t          | 2          | b           
(4 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name                            | index_name                                    | indisvalid | has_child | column_num | column_name 
---------------------------------------+-----------------------------------------------+------------+-----------+------------+-------------
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_a_key_1_prt_part1   | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_a_key_1_prt_part1   | t          | f         | 2          | b           
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_1_prt_part1_a_b_key | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_1_prt_part1_a_b_key | t          | f         | 2          | b           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_a_key_1_prt_part2   | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_a_key_1_prt_part2   | t          | f         | 2          | b           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_1_prt_part2_a_b_key | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_1_prt_part2_a_b_key | t          | f         | 2          | b           
(8 rows)

EXPLAIN SELECT * FROM pt_unique_index_same_name WHERE a = 1;
 QUERY PLAN                                                                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.13..500.30 rows=2 width=30)                                                                               
   ->  Append  (cost=0.13..500.30 rows=1 width=30)                                                                                                           
         ->  Index Only Scan using pt_unique_index_same_name_a_key_1_prt_part1 on pt_unique_index_same_name_1_prt_part1  (cost=0.13..200.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                           
         ->  Index Only Scan using pt_unique_index_same_name_a_key_1_prt_part2 on pt_unique_index_same_name_1_prt_part2  (cost=0.13..300.15 rows=1 width=30) 
               Index Cond: (a = 1)                                                                                                                           
 Optimizer: Postgres query optimizer                                                                                                                         
(7 rows)
SELECT * FROM pt_unique_index_same_name WHERE a = 1;
 a | b                         
---+---------------------------
 1 | 1                         
(1 row)

ALTER TABLE pt_unique_index_same_name DROP CONSTRAINT pt_unique_index_same_name_a_key1;
ALTER

SELECT * FROM index_backed_constraints() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name | constraint_name | index_name | constraint_type 
------------+-----------------+------------+-----------------
(0 rows)
SELECT * FROM root_partition_indexes() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name                | index_name                      | indisvalid | column_num | column_name 
---------------------------+---------------------------------+------------+------------+-------------
 pt_unique_index_same_name | pt_unique_index_same_name_a_key | t          | 1          | a           
 pt_unique_index_same_name | pt_unique_index_same_name_a_key | t          | 2          | b           
(2 rows)
SELECT * FROM child_partition_indexes() WHERE table_name LIKE 'pt_unique_index_same_name%';
 table_name                            | index_name                                  | indisvalid | has_child | column_num | column_name 
---------------------------------------+---------------------------------------------+------------+-----------+------------+-------------
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_a_key_1_prt_part1 | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part1 | pt_unique_index_same_name_a_key_1_prt_part1 | t          | f         | 2          | b           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_a_key_1_prt_part2 | t          | f         | 1          | a           
 pt_unique_index_same_name_1_prt_part2 | pt_unique_index_same_name_a_key_1_prt_part2 | t          | f         | 2          | b           
(4 rows)
